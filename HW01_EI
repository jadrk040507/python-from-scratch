{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# UNIVERSIDAD PANAMERICANA\n","### ESTADÍSTICA INFERENCIAL\n","Julio César Galindo López \\\\\n","Economía \\\\\n","Cuarto semestre \\\\\n","\n","Juan Alvaro Díaz Rimond Kedilhac \\\\\n","Sebastian Fuentes Pérez\n"],"metadata":{"id":"hNE6O-ezrh0s"}},{"cell_type":"code","source":["# Importación de librerías\n","\n","import scipy.stats as sp\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import matplotlib.dates as mdates\n","import seaborn as sns"],"metadata":{"id":"uTLZ_rKlkWRT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Ejercicio 1\n"],"metadata":{"id":"shNQGCt-drFm"}},{"cell_type":"markdown","source":["|                                | Tipo      | Función de Masa/Densidad                                               | Dominio                        | Media              | Varianza                              |\n","|--------------------------------|-----------|-----------------------------------------------------------------------|--------------------------------|--------------------|---------------------------------------|\n","| Distribuciones Discretas       |           |                                                                       |                                |                    |                                       |\n","| Distribución Geométrica        | Discreta  | $ P(X=k)=(1-p)^{k-1}p $                                               | $ k \\in \\{1, 2, ...\\} $       | $ \\frac{1}{p} $   | $ \\frac{1-p}{p^2} $                   |\n","|                                |           |                                                                       |                                |                    |                                       |\n","| Distribución Binomial          | Discreta  | $ P(X=k) = \\binom{n}{k} p^k (1-p)^{n-k} $                             | $ k \\in \\{0, 1, ..., n\\} $     | $ np $             | $ np(1-p) $                           |\n","|                                |           |                                                                       |                                |                    |                                       |\n","| Distribución de Poisson        | Discreta  | $ P(X=k) = e^{-\\lambda} \\frac{\\lambda^k}{k!} $                        | $ k \\in \\{0, 1, 2, ...\\} $     | $ \\lambda $        | $ \\lambda $                           |\n","|                                |           |                                                                       |                                |                    |                                       |\n","| Distribuciones Continuas       |           |                                                                       |                                |                    |                                       |\n","| Distribución Uniforme Continua | Continua  | $ f(x) = \\frac{1}{b-a} $                                               | $ x \\in [a, b] $               | $ \\frac{a+b}{2} $ | $ \\frac{(b-a)^2}{12} $               |\n","|                                |           |                                                                       |                                |                    |                                       |\n","| Distribución Normal            | Continua  | $ f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} $ | $ x \\in (-\\infty, \\infty) $   | $ \\mu $            | $ \\sigma^2 $                         |\n","|                                |           |                                                                       |                                |                    |                                       |\n","| Distribución Exponencial       | Continua  | $ f(x) = \\lambda e^{-\\lambda x} $                                     | $ x \\in [0, \\infty) $          | $ \\frac{1}{\\lambda} $ | $ \\frac{1}{\\lambda^2} $               |\n"],"metadata":{"id":"7boeeb3TduRE"}},{"cell_type":"markdown","source":["##Ejercicio 2"],"metadata":{"id":"ukxmZWGKhUm8"}},{"cell_type":"markdown","source":["1. **Investigación de mercados y comportamiento del consumidor:**\n","   - La estadística inferencial se aplica en el análisis de datos de encuestas y estudios de mercado para identificar patrones y preferencias en el comportamiento del consumidor. Pruebas de hipótesis y análisis de series temporales se utilizan para comprender mejor la demanda de bienes y servicios.\n","\n","2. **Pruebas de significancia en estudios de mercado:**\n","   - Los economistas emplean pruebas de significancia en datos de encuestas de mercado para identificar diferencias entre segmentos de consumidores o efectos de campañas publicitarias. Por ejemplo, se realizan pruebas de hipótesis para determinar si las preferencias de grupos de consumidores son significativamente diferentes.\n","\n","3. **Estimación de elasticidades de demanda:**\n","   - En economía, se estiman las elasticidades de demanda para comprender cómo cambia la cantidad demandada ante variaciones en el precio u otras variables. Modelos econométricos y técnicas de regresión permiten estimar estas elasticidades y determinar su relevancia estadística.\n","\n","4. **Análisis de series temporales en finanzas:**\n","   - En el análisis financiero, se utiliza la estadística inferencial para examinar series temporales de datos financieros como precios de acciones o rendimientos de bonos. Pruebas de autocorrelación, raíz unitaria y modelos ARIMA ayudan a identificar patrones y tendencias en los mercados financieros.\n","5. **Optimización de procesos y toma de decisiones:**\n","La estadística se utiliza para mejorar la eficiencia y la calidad en diversos procesos. Por ejemplo, en la fabricación, se aplican técnicas de control de calidad para reducir defectos y minimizar costos. Además, en la toma de decisiones empresariales, se utilizan análisis estadísticos para evaluar riesgos, pronosticar resultados y optimizar estrategias.\n"],"metadata":{"id":"Ryh72kROnoZu"}},{"cell_type":"markdown","source":["## Ejercicio 3"],"metadata":{"id":"XRL9Ugo5kGAj"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"4REYu4fHkBZJ","executionInfo":{"status":"ok","timestamp":1709165200782,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"50c7a84a-bc2d-42d4-ae72-4ea0070c63cc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    M1  M2  M3  M4  M5  M6  M7  M8  M9  M10\n","0    1   0   0   0   0   0   0   1   1    1\n","1    1   1   1   1   1   1   1   1   1    1\n","2    1   0   0   1   1   0   1   1   1    1\n","3    1   1   1   1   1   1   0   1   1    1\n","4    1   0   1   0   0   1   1   1   1    1\n","5    1   0   0   0   0   1   1   0   1    1\n","6    0   0   1   1   1   0   0   0   1    0\n","7    1   0   1   1   1   1   1   0   1    1\n","8    1   1   0   0   1   1   1   0   1    1\n","9    0   1   1   1   0   1   0   0   0    1\n","10   1   0   1   0   1   1   1   1   1    1\n","11   0   1   1   1   1   0   0   1   1    1\n","12   1   1   1   0   1   1   1   1   1    0\n","13   1   0   0   0   1   1   1   1   1    1\n","14   1   1   0   1   1   1   1   0   1    1\n","15   1   1   1   1   0   1   1   1   0    1\n","16   1   0   0   1   1   1   1   0   1    1\n","17   1   0   1   1   1   1   1   0   0    1\n","18   1   1   1   1   1   1   1   1   1    1\n","19   1   1   1   0   0   0   1   0   1    0"],"text/html":["\n","  <div id=\"df-a010ae0d-438f-4787-9eab-705e92c3a821\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>M1</th>\n","      <th>M2</th>\n","      <th>M3</th>\n","      <th>M4</th>\n","      <th>M5</th>\n","      <th>M6</th>\n","      <th>M7</th>\n","      <th>M8</th>\n","      <th>M9</th>\n","      <th>M10</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a010ae0d-438f-4787-9eab-705e92c3a821')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a010ae0d-438f-4787-9eab-705e92c3a821 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a010ae0d-438f-4787-9eab-705e92c3a821');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0132a893-831f-4512-8fbc-0772df687eb4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0132a893-831f-4512-8fbc-0772df687eb4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0132a893-831f-4512-8fbc-0772df687eb4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"M1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}],"source":["df = pd.DataFrame({f'M{i}': np.random.binomial(1,0.7,20) for i in range(1,11)}) # DataFrame de 10 columnas con 20 datos distribuidos en forma de una v.a. binomial con parámetro 0.7\n","df"]},{"cell_type":"markdown","source":["## Ejercicio 4"],"metadata":{"id":"JDKGfmtevn68"}},{"cell_type":"code","source":["df_mean = pd.DataFrame(df.mean(), columns=['Media de muestras']) # DataFrame con la media muestral para cada columna\n","df_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"8bWZjwC_kp7C","executionInfo":{"status":"ok","timestamp":1709165200783,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5cb73d6e-d3b4-495a-8118-0223d3ef21b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Media de muestras\n","M1                0.85\n","M2                0.50\n","M3                0.65\n","M4                0.60\n","M5                0.70\n","M6                0.75\n","M7                0.75\n","M8                0.55\n","M9                0.85\n","M10               0.85"],"text/html":["\n","  <div id=\"df-915f00f8-ba0b-4fee-8acb-38279bfd081a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Media de muestras</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>M1</th>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>M2</th>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>M3</th>\n","      <td>0.65</td>\n","    </tr>\n","    <tr>\n","      <th>M4</th>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>M5</th>\n","      <td>0.70</td>\n","    </tr>\n","    <tr>\n","      <th>M6</th>\n","      <td>0.75</td>\n","    </tr>\n","    <tr>\n","      <th>M7</th>\n","      <td>0.75</td>\n","    </tr>\n","    <tr>\n","      <th>M8</th>\n","      <td>0.55</td>\n","    </tr>\n","    <tr>\n","      <th>M9</th>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>M10</th>\n","      <td>0.85</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-915f00f8-ba0b-4fee-8acb-38279bfd081a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-915f00f8-ba0b-4fee-8acb-38279bfd081a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-915f00f8-ba0b-4fee-8acb-38279bfd081a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e2b4246-65e3-484c-ac56-d3d3446549fb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e2b4246-65e3-484c-ac56-d3d3446549fb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e2b4246-65e3-484c-ac56-d3d3446549fb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_mean","summary":"{\n  \"name\": \"df_mean\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Media de muestras\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12791055902899928,\n        \"min\": 0.5,\n        \"max\": 0.85,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.85,\n          0.5,\n          0.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["TCL = pd.DataFrame({f'M{i}': np.random.binomial(1,0.7,20) for i in range(1,100000)}).mean() # DataFrame del ejercicio 3 cuando n tiende a infinito\n","sns.displot(TCL)\n","plt.xlabel('Histograma de medias de las muestras')\n","plt.ylabel('')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"Wj9kRQIylF9S","executionInfo":{"status":"ok","timestamp":1709165204684,"user_tz":360,"elapsed":3907,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1969bbef-8af5-402a-bd52-4c5aeb0fc832"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Ejercicio 5"],"metadata":{"id":"kq-ceDlbBFs8"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MM6YBt4Drbrn","executionInfo":{"status":"ok","timestamp":1709165305557,"user_tz":360,"elapsed":100879,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b9da64ae-47cc-48e1-ef27-03f094853658"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Importación de datos de inflación desde Gdrive\n","inflation = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/inflation.csv', index_col=0, header=0, names = ['Fecha', 'No subyacente', 'Subyacente', 'Inflación'], parse_dates = True)\n","inflation.head()"],"metadata":{"id":"UAhai_5yx6we","executionInfo":{"status":"ok","timestamp":1709177122074,"user_tz":360,"elapsed":361,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"colab":{"base_uri":"https://localhost:8080/","height":237},"outputId":"ae09fc1b-5084-4b9d-fcc9-83d52571265b"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            No subyacente  Subyacente  Inflación\n","Fecha                                           \n","2000-01-01           5.27       13.17      11.02\n","2000-02-01           5.51       12.36      10.52\n","2000-03-01           6.71       11.33      10.11\n","2000-04-01           7.31       10.59       9.73\n","2000-05-01           7.98       10.01       9.48"],"text/html":["\n","  <div id=\"df-5f81e337-c1eb-45d7-99d6-e10fc27bd1ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No subyacente</th>\n","      <th>Subyacente</th>\n","      <th>Inflación</th>\n","    </tr>\n","    <tr>\n","      <th>Fecha</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2000-01-01</th>\n","      <td>5.27</td>\n","      <td>13.17</td>\n","      <td>11.02</td>\n","    </tr>\n","    <tr>\n","      <th>2000-02-01</th>\n","      <td>5.51</td>\n","      <td>12.36</td>\n","      <td>10.52</td>\n","    </tr>\n","    <tr>\n","      <th>2000-03-01</th>\n","      <td>6.71</td>\n","      <td>11.33</td>\n","      <td>10.11</td>\n","    </tr>\n","    <tr>\n","      <th>2000-04-01</th>\n","      <td>7.31</td>\n","      <td>10.59</td>\n","      <td>9.73</td>\n","    </tr>\n","    <tr>\n","      <th>2000-05-01</th>\n","      <td>7.98</td>\n","      <td>10.01</td>\n","      <td>9.48</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f81e337-c1eb-45d7-99d6-e10fc27bd1ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f81e337-c1eb-45d7-99d6-e10fc27bd1ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f81e337-c1eb-45d7-99d6-e10fc27bd1ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8a87e519-c5d7-427d-a794-f3baa90dee5d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a87e519-c5d7-427d-a794-f3baa90dee5d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8a87e519-c5d7-427d-a794-f3baa90dee5d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"inflation","summary":"{\n  \"name\": \"inflation\",\n  \"rows\": 289,\n  \"fields\": [\n    {\n      \"column\": \"No subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.9099290035249235,\n        \"min\": -1.96,\n        \"max\": 12.62,\n        \"num_unique_values\": 256,\n        \"samples\": [\n          12.34,\n          8.98,\n          7.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7479811128764242,\n        \"min\": 2.3,\n        \"max\": 13.17,\n        \"num_unique_values\": 201,\n        \"samples\": [\n          4.48,\n          6.71,\n          4.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6541134865463347,\n        \"min\": 2.13,\n        \"max\": 11.02,\n        \"num_unique_values\": 220,\n        \"samples\": [\n          4.63,\n          2.74,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","source":["## Ejercicio 6"],"metadata":{"id":"h8nH97UiBIbE"}},{"cell_type":"code","source":["print(inflation.describe(), f\"\\n\\nMedia:\\n{inflation.mean()} \\n\\nVarianza:\\n{inflation.var()}\\n\\nSesgo:\\n{inflation.skew()}\\n\\nCurtosis:\\n{inflation.kurtosis()-3}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TXJanojrAUmt","executionInfo":{"status":"ok","timestamp":1709168931899,"user_tz":360,"elapsed":3,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6c4dc799-3a96-4315-a4f2-9a8fd698feb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       No subyacente  Subyacente   Inflación\n","count     289.000000  289.000000  289.000000\n","mean        5.984706    4.401626    4.764429\n","std         2.909929    1.747981    1.654113\n","min        -1.960000    2.300000    2.130000\n","25%         3.900000    3.370000    3.690000\n","50%         6.000000    3.840000    4.330000\n","75%         8.070000    4.830000    5.470000\n","max        12.620000   13.170000   11.020000 \n","\n","Media:\n","No subyacente    5.984706\n","Subyacente       4.401626\n","Inflación        4.764429\n","dtype: float64 \n","\n","Varianza:\n","No subyacente    8.467687\n","Subyacente       3.055438\n","Inflación        2.736091\n","dtype: float64\n","\n","Sesgo:\n","No subyacente    0.059925\n","Subyacente       1.972565\n","Inflación        1.261301\n","dtype: float64\n","\n","Curtosis:\n","No subyacente   -3.483645\n","Subyacente       1.699382\n","Inflación       -1.463811\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["La inflación promedio en México desde 2000 fue de 4.76 con una desviación estándar de 1.65. La mediana se encontró en 4.3. Esto significa que en promedio el nivel de inflación estuvo por encima del objetivo del banco central de un nivel de inflación de 3%. El nivel de inflación promedio para alimentos y energéticos fue de 5.98 más menos 2.9. Esto significa que mostraron más variabilidad con respecto a la inflación general. Por último, la inflación subyacente estuvo en promedio en 4.4 más menos 1.74."],"metadata":{"id":"n7pJup-YJHsQ"}},{"cell_type":"code","source":["fig, axs = plt.subplots(1, 3, figsize = (12,4))\n","sns.kdeplot(inflation['Inflación'], ax = axs[0])\n","sns.kdeplot(inflation['Subyacente'], ax = axs[1])\n","sns.kdeplot(inflation['No subyacente'], ax = axs[2])\n","\n","# Medias\n","axs[0].axvline(x = inflation['Inflación'].mean(), color = 'r', linestyle = '--', label = 'Media')\n","axs[1].axvline(x = inflation['Subyacente'].mean(), color = 'r', linestyle = '--', label = 'Media')\n","axs[2].axvline(x = inflation['No subyacente'].mean(), color = 'r', linestyle = '--', label = 'Media')\n","\n","# Medianas\n","axs[0].axvline(x = inflation['Inflación'].median(), color = 'g', linestyle = '--', label = 'Mediana')\n","axs[1].axvline(x = inflation['Subyacente'].median(), color = 'g', linestyle = '--', label = 'Mediana')\n","axs[2].axvline(x = inflation['No subyacente'].median(), color = 'g', linestyle = '--', label = 'Mediana')\n","\n","# # Moda\n","# axs[0].axvline(x = inflation['Inflación'].mode(), color = 'black', linestyle = '--')\n","# axs[1].axvline(x = inflation['Subyacente'].mode(), color = 'black', linestyle = '--')\n","# axs[2].axvline(x = inflation['No subyacente'].mode(), color = 'black', linestyle = '--')\n","\n","axs[0].legend()\n","axs[1].legend()\n","axs[2].legend()\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"RS2g0yO4BCG2","executionInfo":{"status":"ok","timestamp":1709167631413,"user_tz":360,"elapsed":2446,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3faf5451-f480-4580-db2c-62a9401d478a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Los datos muestran comportamientos mixtos. La inflación general muestra un sesgo positivo indicando que tiene una cola a la derecha con un exceso de curtosis negativo, indicando que sus colas son más ligeras. En el caso de la subyacente ocurrió algo similar sin embargo, mostró un exceso de curtosis positivo lo que indica que sus colas son más pesadas aunque con un pico más pronunciado. La no subyacente tuvo un sesgo casi nulo, siendo así simétrica, mientras que tuvo un exceso de curtosis negativo indicando colas ligeras y un pico más suave."],"metadata":{"id":"ivhRTeSFYDxX"}},{"cell_type":"code","source":["sns.heatmap(inflation.corr())\n","plt.show()\n","inflation.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":561},"id":"E8s6Y9_gBPrb","executionInfo":{"status":"ok","timestamp":1709169256445,"user_tz":360,"elapsed":336,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2e533ddf-dddf-4e44-fa97-ab48bef615c1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["               No subyacente  Subyacente  Inflación\n","No subyacente       1.000000    0.271163   0.639314\n","Subyacente          0.271163    1.000000   0.913081\n","Inflación           0.639314    0.913081   1.000000"],"text/html":["\n","  <div id=\"df-963a7a3f-1a06-44ca-b47f-2dcdeec7aee7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No subyacente</th>\n","      <th>Subyacente</th>\n","      <th>Inflación</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No subyacente</th>\n","      <td>1.000000</td>\n","      <td>0.271163</td>\n","      <td>0.639314</td>\n","    </tr>\n","    <tr>\n","      <th>Subyacente</th>\n","      <td>0.271163</td>\n","      <td>1.000000</td>\n","      <td>0.913081</td>\n","    </tr>\n","    <tr>\n","      <th>Inflación</th>\n","      <td>0.639314</td>\n","      <td>0.913081</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-963a7a3f-1a06-44ca-b47f-2dcdeec7aee7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-963a7a3f-1a06-44ca-b47f-2dcdeec7aee7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-963a7a3f-1a06-44ca-b47f-2dcdeec7aee7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-167136ce-03ef-48c0-b431-d2388b3ebbb6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-167136ce-03ef-48c0-b431-d2388b3ebbb6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-167136ce-03ef-48c0-b431-d2388b3ebbb6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"inflation\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"No subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3644250501842559,\n        \"min\": 0.2711626466193532,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.2711626466193532,\n          0.6393143975405086\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39808240698862035,\n        \"min\": 0.2711626466193532,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.2711626466193532,\n          1.0,\n          0.9130806791636702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18823613234002454,\n        \"min\": 0.6393143975405086,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.6393143975405086,\n          0.9130806791636702,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["Este gráfico nos indica que el movimiento de la inflación general se puede explicar principalmente por el movimiento de la subyacente. Es importante recalcar que no estamos asumiendo causalidad sólo por el estadístico sino porque conocemos que los elementos dentro de la canasta del INPC que más peso tienen forman parte de la misma canasta del índice para la subyacente."],"metadata":{"id":"4LzCxj6GbYGG"}},{"cell_type":"code","source":["# Filtro 1\n","# Fechas que presentaron una inflación anual por encima del 10%\n","inflation[inflation['Inflación']>10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"su3naCZzbS59","executionInfo":{"status":"ok","timestamp":1709169517900,"user_tz":360,"elapsed":4,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6af3b6c2-1f0b-4c49-cfde-2da795568d84"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            No subyacente  Subyacente  Inflación\n","Fecha                                           \n","2000-01-01           5.27       13.17      11.02\n","2000-02-01           5.51       12.36      10.52\n","2000-03-01           6.71       11.33      10.11"],"text/html":["\n","  <div id=\"df-02e6450c-9351-4c84-a118-e238b4ec89f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No subyacente</th>\n","      <th>Subyacente</th>\n","      <th>Inflación</th>\n","    </tr>\n","    <tr>\n","      <th>Fecha</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2000-01-01</th>\n","      <td>5.27</td>\n","      <td>13.17</td>\n","      <td>11.02</td>\n","    </tr>\n","    <tr>\n","      <th>2000-02-01</th>\n","      <td>5.51</td>\n","      <td>12.36</td>\n","      <td>10.52</td>\n","    </tr>\n","    <tr>\n","      <th>2000-03-01</th>\n","      <td>6.71</td>\n","      <td>11.33</td>\n","      <td>10.11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02e6450c-9351-4c84-a118-e238b4ec89f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-02e6450c-9351-4c84-a118-e238b4ec89f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-02e6450c-9351-4c84-a118-e238b4ec89f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a6fe757f-12b5-4e63-8bf6-b69b1d9bd75f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6fe757f-12b5-4e63-8bf6-b69b1d9bd75f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a6fe757f-12b5-4e63-8bf6-b69b1d9bd75f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"inflation[inflation['Inflaci\\u00f3n']>10]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"No subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7714920608794366,\n        \"min\": 5.27,\n        \"max\": 6.71,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5.27,\n          5.51,\n          6.71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9221894237808917,\n        \"min\": 11.33,\n        \"max\": 13.17,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          13.17,\n          12.36,\n          11.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4557411546042337,\n        \"min\": 10.11,\n        \"max\": 11.02,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11.02,\n          10.52,\n          10.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["# Filtro 2\n","# Datos entre los años 2020 y finales de 2023\n","inflation[('2020-01-01' <= inflation.index) & (inflation.index < '2023-01-01')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"nn-5YRTIcaQf","executionInfo":{"status":"ok","timestamp":1709169692499,"user_tz":360,"elapsed":326,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c9622ae1-d532-454e-9a60-170d8be15e81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            No subyacente  Subyacente  Inflación\n","Fecha                                           \n","2020-01-01           1.81        3.73       3.24\n","2020-02-01           3.81        3.66       3.70\n","2020-03-01           2.19        3.60       3.25\n","2020-04-01          -1.96        3.50       2.15\n","2020-05-01           0.35        3.64       2.84\n","2020-06-01           2.16        3.71       3.33\n","2020-07-01           2.92        3.85       3.62\n","2020-08-01           4.30        3.97       4.05\n","2020-09-01           4.10        3.99       4.01\n","2020-10-01           4.42        3.98       4.09\n","2020-11-01           2.33        3.66       3.33\n","2020-12-01           1.18        3.80       3.15\n","2021-01-01           2.63        3.84       3.54\n","2021-02-01           3.43        3.87       3.76\n","2021-03-01           6.31        4.12       4.67\n","2021-04-01          12.34        4.13       6.08\n","2021-05-01          10.76        4.37       5.89\n","2021-06-01          10.00        4.58       5.88\n","2021-07-01           9.39        4.66       5.81\n","2021-08-01           8.14        4.78       5.59\n","2021-09-01           9.37        4.92       6.00\n","2021-10-01           9.47        5.19       6.24\n","2021-11-01          12.61        5.67       7.37\n","2021-12-01          11.74        5.94       7.36\n","2022-01-01           9.68        6.21       7.07\n","2022-02-01           9.34        6.59       7.28\n","2022-03-01           9.45        6.78       7.45\n","2022-04-01           9.07        7.22       7.68\n","2022-05-01           8.77        7.28       7.65\n","2022-06-01           9.47        7.49       7.99\n","2022-07-01           9.65        7.65       8.15\n","2022-08-01          10.65        8.05       8.70\n","2022-09-01           9.96        8.28       8.70\n","2022-10-01           8.36        8.42       8.41\n","2022-11-01           5.73        8.51       7.80\n","2022-12-01           6.27        8.35       7.82"],"text/html":["\n","  <div id=\"df-7a017385-d1a5-47e9-8f6d-3cad2d28c8dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No subyacente</th>\n","      <th>Subyacente</th>\n","      <th>Inflación</th>\n","    </tr>\n","    <tr>\n","      <th>Fecha</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-01</th>\n","      <td>1.81</td>\n","      <td>3.73</td>\n","      <td>3.24</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>3.81</td>\n","      <td>3.66</td>\n","      <td>3.70</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>2.19</td>\n","      <td>3.60</td>\n","      <td>3.25</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-01</th>\n","      <td>-1.96</td>\n","      <td>3.50</td>\n","      <td>2.15</td>\n","    </tr>\n","    <tr>\n","      <th>2020-05-01</th>\n","      <td>0.35</td>\n","      <td>3.64</td>\n","      <td>2.84</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-01</th>\n","      <td>2.16</td>\n","      <td>3.71</td>\n","      <td>3.33</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>2.92</td>\n","      <td>3.85</td>\n","      <td>3.62</td>\n","    </tr>\n","    <tr>\n","      <th>2020-08-01</th>\n","      <td>4.30</td>\n","      <td>3.97</td>\n","      <td>4.05</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-01</th>\n","      <td>4.10</td>\n","      <td>3.99</td>\n","      <td>4.01</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01</th>\n","      <td>4.42</td>\n","      <td>3.98</td>\n","      <td>4.09</td>\n","    </tr>\n","    <tr>\n","      <th>2020-11-01</th>\n","      <td>2.33</td>\n","      <td>3.66</td>\n","      <td>3.33</td>\n","    </tr>\n","    <tr>\n","      <th>2020-12-01</th>\n","      <td>1.18</td>\n","      <td>3.80</td>\n","      <td>3.15</td>\n","    </tr>\n","    <tr>\n","      <th>2021-01-01</th>\n","      <td>2.63</td>\n","      <td>3.84</td>\n","      <td>3.54</td>\n","    </tr>\n","    <tr>\n","      <th>2021-02-01</th>\n","      <td>3.43</td>\n","      <td>3.87</td>\n","      <td>3.76</td>\n","    </tr>\n","    <tr>\n","      <th>2021-03-01</th>\n","      <td>6.31</td>\n","      <td>4.12</td>\n","      <td>4.67</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-01</th>\n","      <td>12.34</td>\n","      <td>4.13</td>\n","      <td>6.08</td>\n","    </tr>\n","    <tr>\n","      <th>2021-05-01</th>\n","      <td>10.76</td>\n","      <td>4.37</td>\n","      <td>5.89</td>\n","    </tr>\n","    <tr>\n","      <th>2021-06-01</th>\n","      <td>10.00</td>\n","      <td>4.58</td>\n","      <td>5.88</td>\n","    </tr>\n","    <tr>\n","      <th>2021-07-01</th>\n","      <td>9.39</td>\n","      <td>4.66</td>\n","      <td>5.81</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-01</th>\n","      <td>8.14</td>\n","      <td>4.78</td>\n","      <td>5.59</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-01</th>\n","      <td>9.37</td>\n","      <td>4.92</td>\n","      <td>6.00</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01</th>\n","      <td>9.47</td>\n","      <td>5.19</td>\n","      <td>6.24</td>\n","    </tr>\n","    <tr>\n","      <th>2021-11-01</th>\n","      <td>12.61</td>\n","      <td>5.67</td>\n","      <td>7.37</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-01</th>\n","      <td>11.74</td>\n","      <td>5.94</td>\n","      <td>7.36</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-01</th>\n","      <td>9.68</td>\n","      <td>6.21</td>\n","      <td>7.07</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-01</th>\n","      <td>9.34</td>\n","      <td>6.59</td>\n","      <td>7.28</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-01</th>\n","      <td>9.45</td>\n","      <td>6.78</td>\n","      <td>7.45</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-01</th>\n","      <td>9.07</td>\n","      <td>7.22</td>\n","      <td>7.68</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-01</th>\n","      <td>8.77</td>\n","      <td>7.28</td>\n","      <td>7.65</td>\n","    </tr>\n","    <tr>\n","      <th>2022-06-01</th>\n","      <td>9.47</td>\n","      <td>7.49</td>\n","      <td>7.99</td>\n","    </tr>\n","    <tr>\n","      <th>2022-07-01</th>\n","      <td>9.65</td>\n","      <td>7.65</td>\n","      <td>8.15</td>\n","    </tr>\n","    <tr>\n","      <th>2022-08-01</th>\n","      <td>10.65</td>\n","      <td>8.05</td>\n","      <td>8.70</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-01</th>\n","      <td>9.96</td>\n","      <td>8.28</td>\n","      <td>8.70</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01</th>\n","      <td>8.36</td>\n","      <td>8.42</td>\n","      <td>8.41</td>\n","    </tr>\n","    <tr>\n","      <th>2022-11-01</th>\n","      <td>5.73</td>\n","      <td>8.51</td>\n","      <td>7.80</td>\n","    </tr>\n","    <tr>\n","      <th>2022-12-01</th>\n","      <td>6.27</td>\n","      <td>8.35</td>\n","      <td>7.82</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a017385-d1a5-47e9-8f6d-3cad2d28c8dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a017385-d1a5-47e9-8f6d-3cad2d28c8dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a017385-d1a5-47e9-8f6d-3cad2d28c8dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f85fc09f-26ea-4b74-b4c3-42bc6dc35fb6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f85fc09f-26ea-4b74-b4c3-42bc6dc35fb6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f85fc09f-26ea-4b74-b4c3-42bc6dc35fb6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"inflation[('2020-01-01' <= inflation\",\n  \"rows\": 36,\n  \"fields\": [\n    {\n      \"column\": \"No subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.857889216443262,\n        \"min\": -1.96,\n        \"max\": 12.61,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          9.45,\n          3.43,\n          9.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subyacente\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7476054138562522,\n        \"min\": 3.5,\n        \"max\": 8.51,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          7.22,\n          4.12,\n          6.59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0235044840141563,\n        \"min\": 2.15,\n        \"max\": 8.7,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.89,\n          6.0,\n          7.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["## Ejercicio 7"],"metadata":{"id":"Szn4HaHVc1dE"}},{"cell_type":"code","source":["samples = np.random.binomial(1, 0.5, 1000)\n","x_bar = np.cumsum(samples) / np.arange(1, len(samples) + 1)\n","\n","sns.histplot(x_bar, bins=50, kde=True)\n","plt.axvline(x=0.5, color='r', linestyle='--', alpha=0.5)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"XW_0odBSc2dI","executionInfo":{"status":"ok","timestamp":1709169750940,"user_tz":360,"elapsed":394,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"16e0d141-eba2-432c-ed36-0497cc19a667"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Demuestre que la coleccion de variables aleatorias $\\sqrt{n}\\frac{\\bar{X}_n-p}{p(1-p)}$ converge en distribucion a una variable aleatoria estandar.\n","\n","\\begin{align}\n","\\mathbb{E}[\\bar{X}_n] &= p \\\\\n","Var[\\bar{X}_n] &= \\frac{p(1-p)}{n} \\\\\n","\\text{Por TCl}\\\\\n","\\lim_{n \\to \\infty} P \\left( \\frac{\\bar{X}_n - p}{\\sqrt{\\frac{p(1-p)}{n}}} \\right) &= \\Phi(t)\n","\\end{align}\n","\n"],"metadata":{"id":"nTEc6GStpTY_"}},{"cell_type":"markdown","source":["Considere al intervalo aleatorio:\n","\n","$$I_t = \\left[  \\bar{X}_n - \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}},  \\bar{X}_n + \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}} \\right]$$\n","\n","\n","\\begin{align}\n","P \\left( \\bar{X}_n - \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}} < p < \\bar{X}_n + \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}} \\right) = 0.95 \\\\\n","P \\left( \\bar{X}_n - p - \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}} < 0 < \\bar{X}_n - p + \\frac{t \\sqrt{p(1-p)}}{\\sqrt{n}} \\right)  = 0.95\\\\\n","P \\left( \\frac{\\bar{X}_n - p}{\\frac{\\sqrt{p(1-p)}}{\\sqrt{n}}} - t < 0 < \\frac{\\bar{X}_n - p}{\\frac{\\sqrt{p(1-p)}}{\\sqrt{n}}} + t \\right) = 0.95 \\\\\n","P \\left( Z - t < 0 < Z + t \\right) = 0.95 \\\\\n","P \\left( Z  < t \\right) - P \\left( Z  > -t \\right) = 0.95 \\\\\n","P \\left( Z  < t \\right) - (1 - P \\left( Z  < t \\right)) = 0.95 \\\\\n","\\text{Por simetría}\\\\\n","2P \\left( Z  < t \\right) - 1 = 0.95 \\\\\n","2\\Phi(t) - 1 = 0.95 \\\\\n","\\Phi(t) = 1.95/2 \\\\\n","t \\approx 1.96\n","\\end{align}"],"metadata":{"id":"T6Yrjdkx3kPl"}},{"cell_type":"markdown","source":["Encuentra un intervalo $I_{t_o}$ centrado alrededor de $\\bar{X}_n$ que no dependa de p pero que contenga a p con una probabilidad de, al menos, el 95% cuando n es su cientemente grande.\n","\n","\\begin{align}\n","Var(\\bar{X}_n) = \\frac{1}{n}p(1-p) \\\\\n","\\max_p \\frac{1}{n}p(1-p)\\\\\n","\\text{C.P.O}\\\\\n","1-2p = 0 \\\\\n","p^* = 1/2\n","\\end{align}\n","\n","\n","\\begin{align}\n","I_{t_1} &= \\left[ \\bar{X}_n - 1.96 \\sqrt{\\text{Var}(\\bar{X}_n)} , \\bar{X}_n + 1.96 \\sqrt{\\text{Var}(\\bar{X}_n)} \\right] \\\\\n","I_{t_1} &= \\left[ \\bar{X}_n - 1.96 \\sqrt{0.5^2n} , \\bar{X}_n + 1.96 \\sqrt{0.5^2n} \\right] \\\\\n","I_{t_1} &= \\left[ \\bar{X}_n - 1.96(0.5)\\sqrt{n} , \\bar{X}_n + 1.96(0.5)\\sqrt{n} \\right] \\\\\n","I_{t_1} &= \\left[ \\bar{X}_n - 0.98\\sqrt{n} , \\bar{X}_n + 0.98\\sqrt{n} \\right]\n","\\end{align}"],"metadata":{"id":"zebqGiOlMQnm"}},{"cell_type":"markdown","source":["## Ejercicio 8\n","\n"," En una encuesta en la UP, 150 estudiantes son seleccionados al azar de los que toman\n"," calculo y se les pregunta si calculo es su materia favorita. 20 estudiantes responden que el calculo es\n"," su materia favorita. Proporcione un intervalo de con anza del 95% para la proporcion de todos los\n"," estudiantes que toman calculo y que la consideran su materia favorita."],"metadata":{"id":"V0zJIufw0P3q"}},{"cell_type":"code","source":["import scipy.stats as sp\n","n = 150 # Tamaño de la muestra\n","x_bar = 20/n # Media muestral\n","p = 0.5 # Parámetro óptimo para varianza máxima"],"metadata":{"id":"pOtN-muSA6Jc","executionInfo":{"status":"ok","timestamp":1709174304155,"user_tz":360,"elapsed":345,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["I = (x_bar - sp.norm.ppf(1.95/2)*(p*(1-p)/n)**(1/2),  x_bar + sp.norm.ppf(1.95/2)*(p*(1-p)/n)**(1/2))\n","print(f'Intervalo de confianza I = {I}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xGYWHMP1BB4R","executionInfo":{"status":"ok","timestamp":1709174304596,"user_tz":360,"elapsed":6,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0a66cda1-a53e-4082-db29-065bd5fad686"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["Intervalo de confianza I = (0.05331813872741149, 0.21334852793925518)\n"]}]},{"cell_type":"code","source":["print(f'Intervalo de confianza I = {sp.norm.interval(0.95, loc=x_bar, scale=(p*(1-p)/n)**(1/2))}')"],"metadata":{"id":"rSvHiOkMCh99","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1709174305293,"user_tz":360,"elapsed":3,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b5ba9254-23f7-49b7-bf98-e3a588b4e782"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["Intervalo de confianza I = (0.05331813872741149, 0.21334852793925518)\n"]}]}]}