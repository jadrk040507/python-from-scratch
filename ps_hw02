{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["pPAjXGpgVePF","dSPHSQaCWIWR","tUM4KY6ue6lO","3lL5trulGkLh","iqZJI1Cl8MpN","FUbm-QmKwnTl","DLvPcBdysdvV","m8H8EZI0_Yuh","KGvHJwubSS7J"],"authorship_tag":"ABX9TyMiJjd/PcrH2G2+XuURiMZ6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Ejercicio 1: inciso a, b, c y d\n","\n","* X $\\implies$ el valor máximo que aparece en los dos lanzamiento\n","* Y $\\implies$ el valor mínimo que aparece en los dos lanzamientos\n","* Z $\\implies$ la suma de los números que aparecen en los dos lanzamientos\n","* W $\\implies$ la resta de los números que aparecen en los dos lanzamientos"],"metadata":{"id":"mXw8x2xUetP0"}},{"cell_type":"markdown","source":["## X"],"metadata":{"id":"7uFQ597Jzoyj"}},{"cell_type":"code","source":["from itertools import product, combinations\n","from fractions import Fraction\n","from math import factorial"],"metadata":{"id":"-8DzZlAJNBKu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Omega = set(product(range(1,7), repeat=2))\n","P = {}\n","for i in range(1,7):\n","  P[i]=0\n","  count = 0\n","  for x,y in Omega:\n","    X = max(x,y)\n","    if X == i:\n","      count += 1\n","  P[i]=count/len(Omega)\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VxWRWk8SzqpN","executionInfo":{"status":"ok","timestamp":1698176460100,"user_tz":360,"elapsed":6,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ca3808e5-bae7-4522-b8e2-ad344fa061b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1: 0.027777777777777776,\n"," 2: 0.08333333333333333,\n"," 3: 0.1388888888888889,\n"," 4: 0.19444444444444445,\n"," 5: 0.25,\n"," 6: 0.3055555555555556}"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["#Verificar función de probabilidad\n","sum(P.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p19VwJbYzzoA","executionInfo":{"status":"ok","timestamp":1698176460101,"user_tz":360,"elapsed":5,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"05ceec72-ab8d-4828-b338-b78c573ae9fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["E = []\n","for i in P:\n","  E.append(i*P[i])\n","E = sum(E)\n","\n","E_2 = []\n","for i in P:\n","  E_2.append(i**2*P[i])\n","E_2 = sum(E_2)"],"metadata":{"id":"yYlSCnnOz73W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2-E**2\n","E,variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qWdmbiQx0Bqi","executionInfo":{"status":"ok","timestamp":1698176460379,"user_tz":360,"elapsed":282,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5e467cd1-7f8f-4be1-f5ef-1098b8b18f54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4.472222222222222, 1.9714506172839492)"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["## Y"],"metadata":{"id":"f4OHUik-0J0D"}},{"cell_type":"code","source":["from itertools import product, combinations\n","from fractions import Fraction\n","from math import factorial"],"metadata":{"id":"LEPduU2ZNCWU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Omega = set(product(range(1,7), repeat=2))\n","P = dict()\n","for i in range(1,7):\n","  P[i]=0\n","  count = 0\n","  for x,y in Omega:\n","    X = min(x,y)\n","    if X == i:\n","      count += 1\n","  P[i]=count/len(Omega)\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176460379,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"959d50bf-bd25-4988-f739-944cc726b5cd","id":"MGHN2-Px0J0S"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1: 0.3055555555555556,\n"," 2: 0.25,\n"," 3: 0.19444444444444445,\n"," 4: 0.1388888888888889,\n"," 5: 0.08333333333333333,\n"," 6: 0.027777777777777776}"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["# Verificar función de probabilidad\n","sum(P.values())"],"metadata":{"executionInfo":{"status":"ok","timestamp":1698176460379,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"colab":{"base_uri":"https://localhost:8080/"},"id":"kIzG-22r0J0S","outputId":"a2276f61-8a79-4b01-fefc-d9294fc809f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["E = []\n","for i in P:\n","  E.append(i*P[i])\n","E = sum(E)\n","\n","E_2 = []\n","for i in P:\n","  E_2.append(i**2*P[i])\n","E_2 = sum(E_2)"],"metadata":{"id":"-zG8icJw0J0T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2-E**2\n","E,variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176460379,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ee538dff-2929-4cd5-935b-2a4c08a0fb9e","id":"tqqQ8LF10J0U"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2.5277777777777777, 1.971450617283951)"]},"metadata":{},"execution_count":85}]},{"cell_type":"markdown","source":["## Z"],"metadata":{"id":"dnSuFclDytzv"}},{"cell_type":"code","source":["from itertools import product, combinations\n","from fractions import Fraction\n","from math import factorial"],"metadata":{"id":"Yz3ThR3FNDR1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Cross = set(product(range(1,7), repeat=2))\n","P = {}\n","for i in range(2,13):\n","  P[i]=0\n","  count = 0\n","  for x,y in Cross:\n","    if x+y == i:\n","      count += 1\n","  P[i]=count/len(Cross)"],"metadata":{"id":"98IzjSj5etD6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Verificar función de probabilidad\n","sum(P.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EUfiqnnD1Qos","executionInfo":{"status":"ok","timestamp":1698251508787,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e045f625-3ba4-48c7-edf2-0475d35a63b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0000000000000002"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["E = []\n","for i in P:\n","  E.append(i*P[i])\n","E = sum(E)\n","\n","E_2 = []\n","for i in P:\n","  E_2.append(i**2*P[i])\n","E_2 = sum(E_2)"],"metadata":{"id":"Lloxh_Yhgi1B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2-E**2\n","E,variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Ingu2AsfzLJ","executionInfo":{"status":"ok","timestamp":1698251508787,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0add27b7-844e-4627-dade-f9703afa2472"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6.999999999999999, 5.833333333333336)"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["## W"],"metadata":{"id":"bTwD29Z2yxIU"}},{"cell_type":"code","source":["from itertools import product, combinations\n","from fractions import Fraction\n","from math import factorial"],"metadata":{"id":"XEaP3I4JNEaq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Cross = set(product(range(1,7), repeat=2))\n","P = {}\n","for i in range(0,6):\n","  P[i]=0\n","  count = 0\n","  for x,y in Cross:\n","    if abs(x-y) == i:\n","      count += 1\n","  P[i]=Fraction(count,len(Cross))\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1t2I7VJf002","executionInfo":{"status":"ok","timestamp":1698251650142,"user_tz":360,"elapsed":5,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"cd6d37c6-9f7b-46ca-a906-f9362f15f724"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: Fraction(1, 6),\n"," 1: Fraction(5, 18),\n"," 2: Fraction(2, 9),\n"," 3: Fraction(1, 6),\n"," 4: Fraction(1, 9),\n"," 5: Fraction(1, 18)}"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#Verificar función de probabilidad\n","sum(P.values())"],"metadata":{"id":"hwqVs8JNgO7v","executionInfo":{"status":"ok","timestamp":1698251547396,"user_tz":360,"elapsed":218,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0e753c63-23ab-4306-da3e-0ad8af7a8336"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["E = []\n","for i in P:\n","  E.append(i*P[i])\n","E = sum(E)\n","\n","E_2 = []\n","for i in P:\n","  E_2.append(i**2*P[i])\n","E_2 = sum(E_2)"],"metadata":{"id":"E5FilW9Hgd7D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2-E**2\n","E,variance"],"metadata":{"id":"AJQr3E5pghCf","executionInfo":{"status":"ok","timestamp":1698251549760,"user_tz":360,"elapsed":196,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2cab1c15-837b-4401-ced2-93ca52b512ae","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.9444444444444446, 2.052469135802469)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["# Ejercicio 2"],"metadata":{"id":"pPAjXGpgVePF"}},{"cell_type":"markdown","source":["### \\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      cx & \\text{si $x \\in \\{1,2,3,\\ldots,n\\}$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"dSPHSQaCWIWR"}},{"cell_type":"code","source":["from sympy import *\n","import sympy"],"metadata":{"id":"qksT-f_xXSif"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c = symbols('c')\n","x, n = symbols('x n', integer=True, positive=True)"],"metadata":{"id":"4b7II6JIXU2G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise(\n","  (c*x,x>=1),\n","  (0, True))\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q3ZCnQr_WHsR","executionInfo":{"status":"ok","timestamp":1698176464442,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5e625191-9d3c-4412-c7de-0a0b6cf198f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c*x"],"text/latex":"$\\displaystyle c x$"},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["F_X = Sum(f_X, (x, 1, n)).doit()\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v9QI8uU1dKj2","executionInfo":{"status":"ok","timestamp":1698176464442,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2d438f88-b41e-48d1-805f-ddb7fe5c77c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c*(n**2/2 + n/2)"],"text/latex":"$\\displaystyle c \\left(\\frac{n^{2}}{2} + \\frac{n}{2}\\right)$"},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["c_value = solve(F_X-1, c)\n","c_value[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8KrjeHyvdkk7","executionInfo":{"status":"ok","timestamp":1698176464649,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"fef4d0c6-8374-4749-b231-e3d3ae1d3dde"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2/(n*(n + 1))"],"text/latex":"$\\displaystyle \\frac{2}{n \\left(n + 1\\right)}$"},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","source":["### \\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      c2^{-x} & \\text{si $x \\in \\{1,2,3,\\ldots,n\\}$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"tUM4KY6ue6lO"}},{"cell_type":"code","source":["from sympy import *\n","import sympy"],"metadata":{"id":"vh7yOof3fDYN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c = symbols('c')\n","x, n = symbols('x n', integer=True, positive=True)"],"metadata":{"id":"4qljCOaZfDYT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise(\n","  (c*2**(-x),x>=1),\n","  (0, True))\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176464650,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"683d6eca-b59d-48c4-f2cc-3d2d1a074aac","id":"elTIRWDJfDYT"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c/2**x"],"text/latex":"$\\displaystyle 2^{- x} c$"},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["F_X = F_X = Sum(f_X, (x, 1, n)).doit()\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zgOQFahffMng","executionInfo":{"status":"ok","timestamp":1698176464650,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"08f2ccc8-4d1d-4ba5-90c7-708198329ff5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c*(1 - 2*2**(-n - 1))"],"text/latex":"$\\displaystyle c \\left(1 - 2 \\cdot 2^{- n - 1}\\right)$"},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["c_value = solve(F_X - 1, c)\n","c_value[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IW01tuz0fodA","executionInfo":{"status":"ok","timestamp":1698176464650,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e507de33-8ae5-47e1-dbde-888a15bbaf51"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2**n/(2**n - 1)"],"text/latex":"$\\displaystyle \\frac{2^{n}}{2^{n} - 1}$"},"metadata":{},"execution_count":105}]},{"cell_type":"markdown","source":["# Ejercicio 3"],"metadata":{"id":"3lL5trulGkLh"}},{"cell_type":"markdown","source":["## Caso 1: usando scipy"],"metadata":{"id":"AYV95lkeIZDm"}},{"cell_type":"code","source":["import numpy as py\n","from scipy.stats import binom"],"metadata":{"id":"tvJPCmG-HjGF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n, p = 3, 3/7\n","mean, var = binom.stats(n, p)\n","mean, var"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cmM2TJcIHpYK","executionInfo":{"status":"ok","timestamp":1698176466420,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"33fa4ded-19ea-49ef-deea-fb9b07915ac2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.2857142857142856, 0.7346938775510203)"]},"metadata":{},"execution_count":107}]},{"cell_type":"markdown","source":["## Caso 2: definición formal"],"metadata":{"id":"vXq7Vy1jIeV-"}},{"cell_type":"code","source":["from itertools import *"],"metadata":{"id":"onK9gmDwNKpM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["coin = [0,1]\n","throws = 3\n","p = 3/7\n","Omega = set(product(coin, repeat=3))\n","Omega"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mZjX6hJeIh7M","executionInfo":{"status":"ok","timestamp":1698176488577,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"478ed873-4234-4dc2-847c-edf7322c3af1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{(0, 0, 0),\n"," (0, 0, 1),\n"," (0, 1, 0),\n"," (0, 1, 1),\n"," (1, 0, 0),\n"," (1, 0, 1),\n"," (1, 1, 0),\n"," (1, 1, 1)}"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["X = {}\n","for x,y,z in Omega:\n","  count = 0\n","  if x==1:\n","    count +=1\n","  if y==1:\n","    count+=1\n","  if z==1:\n","    count+=1\n","  X[(x,y,z)]=count\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U70nDRqXJI0c","executionInfo":{"status":"ok","timestamp":1698176488578,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d0df1e5c-b413-4d2e-f2fe-afb4f1656f89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{(1, 0, 1): 2,\n"," (1, 1, 0): 2,\n"," (0, 1, 0): 1,\n"," (0, 0, 0): 0,\n"," (1, 0, 0): 1,\n"," (0, 0, 1): 1,\n"," (1, 1, 1): 3,\n"," (0, 1, 1): 2}"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["P = {}\n","for i in range(throws+1):\n","  P[i] = factorial(throws)/(factorial(throws-i)*factorial(i))*p**i*(1-p)**(throws-i)\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLV8n9A8Ko03","executionInfo":{"status":"ok","timestamp":1698176488578,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"f88f09e5-e683-4414-8dba-d01e15d905d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: 0.186588921282799,\n"," 1: 0.419825072886297,\n"," 2: 0.314868804664723,\n"," 3: 0.0787172011661808}"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["#Verificación de función de probabilidad\n","sum(P.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"udz9nITdNdzn","executionInfo":{"status":"ok","timestamp":1698176488578,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"53b63c6d-2283-428f-a6c9-7156894cbf16"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.00000000000000"],"text/latex":"$\\displaystyle 1.0$"},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["E = []\n","for i in P:\n","  E.append(i*P[i])\n","E = sum(E)\n","\n","E_2 = []\n","for i in P:\n","  E_2.append(i**2*P[i])\n","E_2 = sum(E_2)"],"metadata":{"id":"0AAJIAwQLciE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2-E**2\n","E,variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TOvpci59OOmj","executionInfo":{"status":"ok","timestamp":1698176488578,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"900bda18-a108-49a5-fc7c-ea3ff0a325dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.28571428571429, 0.734693877551021)"]},"metadata":{},"execution_count":123}]},{"cell_type":"markdown","source":["# Ejercicio 5\n","2 bolas se seleccionan al azar de una urna de 18 bolas."],"metadata":{"id":"iqZJI1Cl8MpN"}},{"cell_type":"code","source":["B = [*'B'*10]\n","N = [*'N'*5]\n","O = [*'O'*3]\n","\n","Pot = B + N + O"],"metadata":{"id":"GViieY7r8VF3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Comb = set(combinations(Pot,2))\n","Omega = list(combinations(Pot, 2))\n","#Omega"],"metadata":{"id":"2ll7dClB8hOU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Definamos X como la cantidad de dinero\n","X = {}\n","for x,y in Comb:\n","  m = 0\n","  if x == 'B':\n","    m -= 1\n","  elif x == 'N':\n","    m += 3\n","  if y == 'B':\n","    m -= 1\n","  elif y == 'N':\n","    m += 3\n","  X[(x,y)]=m\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sFKl_GCz9VYa","executionInfo":{"status":"ok","timestamp":1698176489589,"user_tz":360,"elapsed":201,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7a9e4651-0b97-40e1-8d5b-c710ee4b26c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{('N', 'N'): 6,\n"," ('B', 'N'): 2,\n"," ('O', 'O'): 0,\n"," ('B', 'B'): -2,\n"," ('B', 'O'): -1,\n"," ('N', 'O'): 3}"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["P = {}\n","for i in Comb:\n","  P[i] = Omega.count(i)/len(Omega)\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRTjh8xm-NiU","executionInfo":{"status":"ok","timestamp":1698176489590,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"67cde991-069d-4c1e-85e5-9dd4f7bac58e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{('N', 'N'): 0.06535947712418301,\n"," ('B', 'N'): 0.32679738562091504,\n"," ('O', 'O'): 0.0196078431372549,\n"," ('B', 'B'): 0.29411764705882354,\n"," ('B', 'O'): 0.19607843137254902,\n"," ('N', 'O'): 0.09803921568627451}"]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["sum(P.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukSYT_zaN9Sv","executionInfo":{"status":"ok","timestamp":1698176489590,"user_tz":360,"elapsed":6,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a63f022b-ed2a-4275-a0ab-563372c6b244"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9999999999999999"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["E = []\n","for i in X:\n","  for j in P:\n","    if i == j:\n","      E.append(X[i]*P[j])\n","E = sum(E)\n","\n","E_2 = []\n","for i in X:\n","  for j in P:\n","    if i == j:\n","      E_2.append((X[i]**2)*P[j])\n","E_2 = sum(E_2)"],"metadata":{"id":"HB0roqErCet3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variance = E_2 - E**2\n","E,variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HoV787NPDjbl","executionInfo":{"status":"ok","timestamp":1698176489590,"user_tz":360,"elapsed":4,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6aaea59d-f009-4a6f-ab8a-d4b2c78e0111"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.5555555555555556, 5.60639070442992)"]},"metadata":{},"execution_count":130}]},{"cell_type":"markdown","source":["# Ejercicio 6"],"metadata":{"id":"FUbm-QmKwnTl"}},{"cell_type":"markdown","source":["### \\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      cx & \\text{si $0 \\le x \\le 2$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"d4_IoxXGwsGT"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve, Piecewise, lambdify\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"agCnIWBAxDgC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')"],"metadata":{"id":"gcP56v9Vw5HT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise((c*x*(2-x), (x >= 0) & (x <= 2)), (0, True))\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1cjgffrSxFTg","executionInfo":{"status":"ok","timestamp":1698176490847,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1cd2a10b-4940-4466-b0b0-40aedea49797"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((c*x*(2 - x), (x >= 0) & (x <= 2)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} c x \\left(2 - x\\right) & \\text{for}\\: x \\geq 0 \\wedge x \\leq 2 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x, 0, 2))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d_NST61KxPtF","executionInfo":{"status":"ok","timestamp":1698176491079,"user_tz":360,"elapsed":239,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"84145def-03b5-49bf-a47d-bb13be583d71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4*c/3"],"text/latex":"$\\displaystyle \\frac{4 c}{3}$"},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cSCk6X8SxXBb","executionInfo":{"status":"ok","timestamp":1698176491079,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ba973826-0f24-4309-9e79-c2f7c4a68c54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[3/4]"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["f_X_numeric = lambdify(x, f_X.subs(c, c_value[0]), 'numpy')"],"metadata":{"id":"HNbNNMovxwbX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_values = np.linspace(0, 2, 400)\n","y_values = [f_X_numeric(x_val) for x_val in x_values]\n","\n","plt.plot(x_values, y_values, label='Función de Densidad')\n","plt.xlabel('x')\n","plt.ylabel('f(x)')\n","plt.title('Función de Densidad')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"98D4wGW_x9jJ","executionInfo":{"status":"ok","timestamp":1698176491835,"user_tz":360,"elapsed":763,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a395b858-e088-4958-804e-30c3dee09044"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### \\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      cx & \\text{si $0 \\le x \\le 1$}\\\\\n","      c & \\text{si $1 \\le x \\le 2$} \\\\\n","      -cx+3c & \\text{si $2 \\le x \\le 3$} \\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"sa-iM0HryqFi"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve, Piecewise, lambdify\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"SIuxc5wdyqFr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')"],"metadata":{"id":"hqcDeS-oyqFr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise(\n","    (c*x*(2-x), (x >= 0) & (x <= 1)),\n","    (c, (x >= 1) & (x <= 2)),\n","    (-c*x+3*c, (x >= 2) & (x <= 3)),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176492214,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5719af9f-84ab-4822-e940-b118e40f7da8","id":"6kpPof2jyqFr"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((c*x*(2 - x), (x >= 0) & (x <= 1)), (c, (x >= 1) & (x <= 2)), (-c*x + 3*c, (x >= 2) & (x <= 3)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} c x \\left(2 - x\\right) & \\text{for}\\: x \\geq 0 \\wedge x \\leq 1 \\\\c & \\text{for}\\: x \\geq 1 \\wedge x \\leq 2 \\\\- c x + 3 c & \\text{for}\\: x \\geq 2 \\wedge x \\leq 3 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x, 0, 3))\n","\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176492434,"user_tz":360,"elapsed":229,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1c273501-5b87-4e4c-879f-073ef577500f","id":"Iq7cynYMyqFr"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13*c/6"],"text/latex":"$\\displaystyle \\frac{13 c}{6}$"},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176492435,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e9ad65da-bae5-45ab-fe27-16bb51b4de9a","id":"u7idkLttyqFs"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[6/13]"]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["f_X_numeric = lambdify(x, f_X.subs(c, c_value[0]), 'numpy')"],"metadata":{"id":"gHyI9AUHyqFs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_values = np.linspace(0, 2, 400)\n","y_values = [f_X_numeric(x_val) for x_val in x_values]\n","\n","plt.plot(x_values, y_values, label='Función de Densidad')\n","plt.xlabel('x')\n","plt.ylabel('f(x)')\n","plt.title('Función de Densidad')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176492843,"user_tz":360,"elapsed":413,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d9d1a8fd-cb22-474f-e222-6c1b2a97b53e","id":"O_D4CucgyqFs"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### \\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      cx^n(1-x) & \\text{si $0 \\le x \\le 1$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"-e2fH-Mz0QJk"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve, Piecewise, lambdify, Naturals\n","import sympy as sp\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"cAVxrYoj0QJr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Definimos los símbolos\n","x, c, n = sp.symbols('x c n', real=True, positive=True, integer=True)"],"metadata":{"id":"-2ySTvIq6fWX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Definimos la función f_X\n","f_X = Piecewise(\n","    (c * x**n * (1 - x), (x >= 0) & (x <= 1)),\n","    (0, True)\n",")"],"metadata":{"id":"UTM9i3-Y79UN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Encontramos el valor de c\n","integral = sp.integrate(f_X, (x, 0, 1))\n","c_value = sp.solve(integral - 1, c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kQkcEcfs7_Uc","executionInfo":{"status":"ok","timestamp":1698176493503,"user_tz":360,"elapsed":667,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"372ef171-d06e-4677-80c8-7f241216c003"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[n**2 + 3*n + 2]"]},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":["# Definimos la función de distribución F_X\n","F_X = integrate(f_X, (x,0,x))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yyau9ekJ8DM_","executionInfo":{"status":"ok","timestamp":1698176493503,"user_tz":360,"elapsed":18,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"bd1c3e58-564b-44ae-cb8c-0afc7834fad3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c/(n**2 + 3*n + 2)"],"text/latex":"$\\displaystyle \\frac{c}{n^{2} + 3 n + 2}$"},"metadata":{},"execution_count":149}]},{"cell_type":"code","source":["# Graficamos f_X y F_X\n","x_values = np.linspace(0, 1, 100)\n","f_X_values = [f_X.subs({x: val, c: c_value[0], n: 1}) for val in x_values]\n","F_X_values = [F_X.subs({x: val, c: c_value[0], n: 1}) for val in x_values]\n","\n","plt.figure(figsize=(12, 6))\n","plt.subplot(1, 2, 1)\n","plt.plot(x_values, f_X_values, label='f_X')\n","plt.xlabel('x')\n","plt.ylabel('f_X')\n","plt.legend()\n","\n","plt.subplot(1, 2, 2)\n","plt.plot(x_values, F_X_values, label='F_X')\n","plt.xlabel('x')\n","plt.ylabel('F_X')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rnGiKdE_7yW_","executionInfo":{"status":"ok","timestamp":1698176494756,"user_tz":360,"elapsed":1268,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"27abb17f-1933-4ddf-d667-cdceca2af8e0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Ejercicio 7\n","\n","\\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      0.2 & \\text{si $-1 < x \\le 0$}\\\\\n","      0.2+cx & \\text{si $0 < x \\le 1$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"pA3ohFz9VQzP"}},{"cell_type":"code","source":["from sympy import *\n","import numpy as np"],"metadata":{"id":"ax8ZtAVWVZkm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')\n","f_X = Piecewise(\n","    (0.2, (x>-1) & (x<=0)),\n","    (0.2+c*x, (x>0) & (x<=1)),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"id":"DNP08PUPY4WR","executionInfo":{"status":"ok","timestamp":1698351143587,"user_tz":360,"elapsed":170,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"93c38b09-b105-4037-8ab4-95f3882a69ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":39},"id":"UzjXcPCV34RC","executionInfo":{"status":"ok","timestamp":1698351143768,"user_tz":360,"elapsed":186,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"07d17062-39e1-43c4-c4b7-278daf3c9e65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yvz5mnKvZCsa","executionInfo":{"status":"ok","timestamp":1698351143768,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"53eec0c2-912e-4379-fe4b-39b03068019d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"id":"dwRO6H6-Z6HC","executionInfo":{"status":"ok","timestamp":1698351213395,"user_tz":360,"elapsed":260,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"9577f7e8-9484-4a90-8fb9-f5617e7f0da9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["F_X = integrate(f_X, x)\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"cDMt5OU24RA9","executionInfo":{"status":"ok","timestamp":1698351297988,"user_tz":360,"elapsed":265,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2c1974cd-7c29-42b7-c7b3-cba3218de22f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x <= -1), (0.2*x + 0.2, x <= 0), (0.6*x**2 + 0.2*x + 0.2, x <= 1), (1.0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x \\leq -1 \\\\0.2 x + 0.2 & \\text{for}\\: x \\leq 0 \\\\0.6 x^{2} + 0.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\\\1.0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(0\\le X < \\frac{1}{2})$"],"metadata":{"id":"NfffSRHkcmxN"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve"],"metadata":{"id":"_dEKdLxmckCV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### c_value code"],"metadata":{"id":"YjeXgUsUdzq8"}},{"cell_type":"code","source":["from sympy import *\n","import numpy as np"],"metadata":{"id":"WH1Q4PtSmrQI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')\n","f_X = Piecewise(\n","    (0.2, (x>-1) & (x<=0)),\n","    (0.2+c*x, (x>0) & (x<=1)),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351143928,"user_tz":360,"elapsed":170,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"4cd30945-3f74-471b-e3cc-266c513fd86b","id":"uNvAf7w9mrQI"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351143929,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"37d3c932-0a59-4551-9cc7-ffbf362e78a2","id":"4juW0jdHmrQI"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351143929,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c0ffec11-4de0-4c15-d254-b63b69e0d9f6","id":"pRohTSj2mrQJ"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351143929,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"94b45524-acda-4651-d708-4256ad77dd07","id":"NN34jmBDmrQJ"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["F_X = integrate(f_X, x)\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351143929,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e9d85aab-3d0b-4273-943e-bfd58b33323a","id":"dIvZ69slmrQJ"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x <= -1), (0.2*x + 0.2, x <= 0), (0.6*x**2 + 0.2*x + 0.2, x <= 1), (1.0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x \\leq -1 \\\\0.2 x + 0.2 & \\text{for}\\: x \\leq 0 \\\\0.6 x^{2} + 0.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\\\1.0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["### Integración desde 0 hasta 1/2"],"metadata":{"id":"J2HWwU6beHCH"}},{"cell_type":"code","source":["x = symbols('x')\n","f_X = diff(F_X, x)\n","F_X = integrate(f_X, (x, 0, 1/2))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144076,"user_tz":360,"elapsed":158,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"92d8dbe1-408d-4b64-e0d9-82a48b4db26d","id":"r60IXep2ePSC"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.250000000000000"],"text/latex":"$\\displaystyle 0.25$"},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(X>\\frac{1}{2}| X>0.1)$"],"metadata":{"id":"jLEKLO1zzSM6"}},{"cell_type":"code","source":["from sympy import *\n","import sympy\n","import numpy as np"],"metadata":{"id":"GpF7gg-uzSNA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')\n","\n","f_X = Piecewise(\n","    (0.2, (x > -1) & (x <= 0)),\n","    (0.2+c*x, (x > 0) & (x <= 1)),\n","    (0, True)\n","     )\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144077,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"be2be8ca-3228-4064-eefc-e5436132e829","id":"D4gosvyhzSNB"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144077,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3d0ce929-37b6-46a9-8291-076d881af0f6","id":"iPSRAzZJzSNB"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144248,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"fb047d01-01d3-4cc2-850d-e96660be81bf","id":"tbOPvvekzSNB"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144248,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1a290660-4f9b-4f75-e2e1-cb62421f449e","id":"bTn3FuV5zSNB"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["### $\\mathbb{P}(X>\\frac{1}{2}|X>0.1)$"],"metadata":{"id":"h_9anZEfzSNB"}},{"cell_type":"code","source":["P_X_0 = integrate(f_X, (x, 1/2, oo))\n","P_X_0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144248,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7b923737-d66a-4de6-b836-33e92844794a","id":"wpIloQGyzSNB"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.550000000000000"],"text/latex":"$\\displaystyle 0.55$"},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["P_X_1 = integrate(f_X, (x, 0.1, oo))\n","P_X_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZQQtDku2lc-","executionInfo":{"status":"ok","timestamp":1698351144422,"user_tz":360,"elapsed":181,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e1f92590-38af-44b8-c435-99fa85379a82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.774000000000000"],"text/latex":"$\\displaystyle 0.774$"},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["P_cond = P_X_0/P_X_1\n","P_cond"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Usr3xLmC27gE","executionInfo":{"status":"ok","timestamp":1698351144422,"user_tz":360,"elapsed":23,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c46e0941-b284-4272-9736-59d84d06ce32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.710594315245478"],"text/latex":"$\\displaystyle 0.710594315245478$"},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["## $Y=2X+3$"],"metadata":{"id":"rJt7O1t65f0h"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve, diff\n","import sympy\n","import numpy as np"],"metadata":{"id":"D6-tlGfT5kGT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Calcular la función de densidad"],"metadata":{"id":"yJRxuVxZ6Izr"}},{"cell_type":"code","source":["x, c = symbols('x c')\n","\n","f_X = Piecewise(\n","    (0.2, (x > -1) & (x <= 0)),\n","    (0.2+c*x, (x > 0) & (x <= 1)),\n","    (0, True)\n","     )\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144422,"user_tz":360,"elapsed":21,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"78ab3b77-e66c-4778-ba96-0a079d55926b","id":"JDpsizKY6HG3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144422,"user_tz":360,"elapsed":21,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b902aeb9-dfaa-40f5-e4d0-ebbfc9d78c87","id":"EfanreIi6HG3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144423,"user_tz":360,"elapsed":20,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"412b6c9b-18b1-42b2-c0d3-f3d78af5ada3","id":"_ob0VXSj6HG3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351144423,"user_tz":360,"elapsed":18,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e2bac4f5-d5e6-414b-b72a-f9c455017a1f","id":"0ptWuzpI6HG3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","source":["### $$ f_Y(y) = f_X(g^{-1}(y) \\left| \\frac{d}{dy}g^{-1}(y)\\right| $$"],"metadata":{"id":"fn7w-5oD8J3p"}},{"cell_type":"code","source":["x, y = symbols('x y')\n","F_Y = Eq(y, 2*x+3)\n","g_y = solve(F_Y, x)\n","g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MXYmLYdi8kuc","executionInfo":{"status":"ok","timestamp":1698351144607,"user_tz":360,"elapsed":201,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c833b772-afe3-4e7d-efc0-61ae4b3b2607"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[y/2 - 3/2]"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["f_X_g_y = f_X.subs(x, g_y[0])\n","f_X_g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qZ1_xZh9Oct","executionInfo":{"status":"ok","timestamp":1698351144805,"user_tz":360,"elapsed":202,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"4fb2243f-3183-4650-8bee-069d0fdbaf59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (y <= 3) & (y > 1)), (0.6*y - 1.6, (y <= 5) & (y > 3)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: y \\leq 3 \\wedge y > 1 \\\\0.6 y - 1.6 & \\text{for}\\: y \\leq 5 \\wedge y > 3 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["dif_g_y = diff(g_y[0], y)\n","dif_g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lAQ4Zddy-Lgq","executionInfo":{"status":"ok","timestamp":1698351144805,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b334f7cc-97c2-41de-e232-c2a76c0cc8a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1/2"],"text/latex":"$\\displaystyle \\frac{1}{2}$"},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["f_Y = f_X_g_y * dif_g_y\n","f_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p9HJn8SN-sYB","executionInfo":{"status":"ok","timestamp":1698351144805,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e7b3fd9f-f1fa-4f9b-d8fc-8fce5ce7a6e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (y <= 3) & (y > 1)), (0.6*y - 1.6, (y <= 5) & (y > 3)), (0, True))/2"],"text/latex":"$\\displaystyle \\frac{\\begin{cases} 0.2 & \\text{for}\\: y \\leq 3 \\wedge y > 1 \\\\0.6 y - 1.6 & \\text{for}\\: y \\leq 5 \\wedge y > 3 \\\\0 & \\text{otherwise} \\end{cases}}{2}$"},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["## $\\mathbb{E}[X] \\ \\& \\ \\mathbb{E}[Y]$"],"metadata":{"id":"4iOdXBHr_Bm5"}},{"cell_type":"markdown","source":["### $f_{X}(x)$"],"metadata":{"id":"EuJZB3I7_09-"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve\n","import sympy\n","import numpy as np"],"metadata":{"id":"U00Ev8b3_y7V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, c = symbols('x c')\n","f_X = Piecewise(\n","    (0.2, (x>-1) & (x<=0)),\n","    (0.2+c*x, (x>0) & (x<=1)),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1698351144806,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"50be9925-919e-4bb5-e10e-af9fd1a54879","id":"8F-vcKIB_y7W"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":39},"executionInfo":{"status":"ok","timestamp":1698351144806,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"cd79f813-aff1-47bd-a935-8aa019fdcce3","id":"s0FYbyaj_y7W"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351145019,"user_tz":360,"elapsed":225,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"9dae6789-270d-4629-ad52-1d30e6a70edc","id":"m318NwM7_y7W"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1698351145019,"user_tz":360,"elapsed":18,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"019df625-e471-45ab-93b5-e84d86f901e2","id":"YhGJXZLe_y7W"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["### $f_Y(y)$"],"metadata":{"id":"4eki1Qi4_-4g"}},{"cell_type":"code","source":["f_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":108},"id":"XWHEbPA0AD7c","executionInfo":{"status":"ok","timestamp":1698351145019,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6e548257-926e-4588-dd74-8b1b53fe7eca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (y <= 3) & (y > 1)), (0.6*y - 1.6, (y <= 5) & (y > 3)), (0, True))/2"],"text/latex":"$\\displaystyle \\frac{\\begin{cases} 0.2 & \\text{for}\\: y \\leq 3 \\wedge y > 1 \\\\0.6 y - 1.6 & \\text{for}\\: y \\leq 5 \\wedge y > 3 \\\\0 & \\text{otherwise} \\end{cases}}{2}$"},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["### $\\mathbb{E}[X] \\ \\& \\ \\mathbb{E}[Y]$"],"metadata":{"id":"jkAwDCG5AYn3"}},{"cell_type":"code","source":["E_X = integrate(x*f_X, (x, -oo, oo))\n","E_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"sES1PYb2Abns","executionInfo":{"status":"ok","timestamp":1698351145019,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"54b65c73-c56a-4b61-d640-7e3080252ef2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.400000000000000"],"text/latex":"$\\displaystyle 0.4$"},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["E_Y = integrate(y*f_Y, (y, -oo, oo))\n","E_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"79ItulNpAiSv","executionInfo":{"status":"ok","timestamp":1698351145019,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3bada2b1-b45f-4667-8c2c-abea871f866e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.80000000000000"],"text/latex":"$\\displaystyle 3.8$"},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["## MGF"],"metadata":{"id":"oeRKAS-qA0NW"}},{"cell_type":"markdown","source":["### $Y=2X+3$"],"metadata":{"id":"0SZLoUjdZVpx"}},{"cell_type":"code","source":["from sympy import integrate, symbols, solveset, Eq, solve, diff\n","import sympy\n","import numpy as np"],"metadata":{"id":"56MxkXNCZVpy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Calcular la función de densidad"],"metadata":{"id":"3m4FooZ5ZVpy"}},{"cell_type":"code","source":["x, c = symbols('x c')\n","\n","f_X = Piecewise(\n","    (0.2, (x > -1) & (x <= 0)),\n","    (0.2+c*x, (x > 0) & (x <= 1)),\n","    (0, True)\n","     )\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1698351145020,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b1b6ca92-7c00-4128-d5e1-ec0bb90a7f4a","id":"BvmzTbZwZVpy"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (c*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\c x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":39},"executionInfo":{"status":"ok","timestamp":1698351145155,"user_tz":360,"elapsed":151,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1f0d9866-5de9-4c21-a215-683fd90ed765","id":"_JAENm6nZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5*c + 0.4"],"text/latex":"$\\displaystyle 0.5 c + 0.4$"},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["c_value = solve(Eq(F_X,1), c)\n","c_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351145156,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"db91cc04-ba85-45c2-e94f-345faaaba32f","id":"nAmZxA9KZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.20000000000000]"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["f_X = f_X.subs(c, c_value[0])\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1698351145156,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e28f1400-7429-44c6-e533-1f3f60539f25","id":"cCJyF29YZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (x <= 0) & (x > -1)), (1.2*x + 0.2, (x <= 1) & (x > 0)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: x \\leq 0 \\wedge x > -1 \\\\1.2 x + 0.2 & \\text{for}\\: x \\leq 1 \\wedge x > 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["#### $$ f_Y(y) = f_X(g^{-1}(y) \\left| \\frac{d}{dy}g^{-1}(y)\\right| $$"],"metadata":{"id":"GK31hICXZVpz"}},{"cell_type":"code","source":["x, y = symbols('x y')\n","F_Y = Eq(y, 2*x+3)\n","g_y = solve(F_Y, x)\n","g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698351145156,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a3b4c51c-3791-4d4b-e862-713cad39032b","id":"ywcS4RmZZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[y/2 - 3/2]"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["f_X_g_y = f_X.subs(x, g_y[0])\n","f_X_g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1698351145156,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d1a3a8ed-a161-4d41-8410-5dea9e3a4037","id":"8oaEl0RBZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (y <= 3) & (y > 1)), (0.6*y - 1.6, (y <= 5) & (y > 3)), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.2 & \\text{for}\\: y \\leq 3 \\wedge y > 1 \\\\0.6 y - 1.6 & \\text{for}\\: y \\leq 5 \\wedge y > 3 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["dif_g_y = diff(g_y[0], y)\n","dif_g_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1698351145342,"user_tz":360,"elapsed":193,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"014ff74c-51a1-4afd-c33e-91b708dccdb3","id":"bcrXME2kZVpz"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1/2"],"text/latex":"$\\displaystyle \\frac{1}{2}$"},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["f_Y = f_X_g_y * dif_g_y\n","f_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":108},"executionInfo":{"status":"ok","timestamp":1698351145342,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"efbb95e0-f25e-41f1-9e0b-ecd78b8c4875","id":"_CnzAGDYZVp0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2, (y <= 3) & (y > 1)), (0.6*y - 1.6, (y <= 5) & (y > 3)), (0, True))/2"],"text/latex":"$\\displaystyle \\frac{\\begin{cases} 0.2 & \\text{for}\\: y \\leq 3 \\wedge y > 1 \\\\0.6 y - 1.6 & \\text{for}\\: y \\leq 5 \\wedge y > 3 \\\\0 & \\text{otherwise} \\end{cases}}{2}$"},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["### MGF"],"metadata":{"id":"jzHA_i0UZdbZ"}},{"cell_type":"code","source":["from sympy import *\n","import sympy\n","t = symbols('t')\n","MGF_X = integrate(sympy.exp(t*x)*f_X, (x, -oo, oo))\n","MGF_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":68},"id":"uglc_7vbA2rL","executionInfo":{"status":"ok","timestamp":1698351145805,"user_tz":360,"elapsed":470,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"4f6ea885-1c2c-464f-9e08-3ded7a5f6542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.2/t - 0.2*exp(-t)/t - 1.0*(0.2*t - 1.2)/t**2 + 1.0*(1.4*t - 1.2)*exp(t)/t**2, (t > -oo) & (t < oo) & Ne(t, 0)), (1.0, True))"],"text/latex":"$\\displaystyle \\begin{cases} \\frac{0.2}{t} - \\frac{0.2 e^{- t}}{t} - \\frac{1.0 \\cdot \\left(0.2 t - 1.2\\right)}{t^{2}} + \\frac{1.0 \\cdot \\left(1.4 t - 1.2\\right) e^{t}}{t^{2}} & \\text{for}\\: t > -\\infty \\wedge t < \\infty \\wedge t \\neq 0 \\\\1.0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["t = symbols('t')\n","MGF_Y = integrate(sympy.exp(t*y)*f_Y, (y, -oo, oo))\n","MGF_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":68},"id":"8FN92pxxYwiJ","executionInfo":{"status":"ok","timestamp":1698351146130,"user_tz":360,"elapsed":330,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2fea17de-f095-484b-a7ba-8e38c4a07be3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.1*exp(3*t)/t - 0.1*exp(t)/t - 1.0*(0.0999999999999999*t - 0.3)*exp(3*t)/t**2 + 1.0*(0.7*t - 0.3)*exp(5*t)/t**2, (t > -oo) & (t < oo) & Ne(t, 0)), (1.0, True))"],"text/latex":"$\\displaystyle \\begin{cases} \\frac{0.1 e^{3 t}}{t} - \\frac{0.1 e^{t}}{t} - \\frac{1.0 \\cdot \\left(0.0999999999999999 t - 0.3\\right) e^{3 t}}{t^{2}} + \\frac{1.0 \\cdot \\left(0.7 t - 0.3\\right) e^{5 t}}{t^{2}} & \\text{for}\\: t > -\\infty \\wedge t < \\infty \\wedge t \\neq 0 \\\\1.0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":85}]},{"cell_type":"markdown","source":["# Ejercicio 8\n","\n","\\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      0 & \\text{si $x < 0$}\\\\\n","      \\sin^2(x) & \\text{si $0 \\le x \\le 1$}\\\\\n","      1 & \\text{si $x > 0$ }\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"DLvPcBdysdvV"}},{"cell_type":"code","source":["from sympy import *\n","from math import pi\n","import sympy"],"metadata":{"id":"fb8OFkrzs6fZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = symbols('x')"],"metadata":{"id":"TXFfwdNFt7e9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["F_X = Piecewise(\n","    (0, (x<0)),\n","    ((sympy.sin(pi*x/2)**2), (x>=0) & (x<=1)),\n","    (1, (x>1))\n",")\n","\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7m1ZvKrotwn1","executionInfo":{"status":"ok","timestamp":1698176497949,"user_tz":360,"elapsed":26,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2ca6aedd-1396-45c8-d753-c235c70c3c62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x < 0), (sin(1.5707963267949*x)**2, x <= 1), (1, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x < 0 \\\\\\sin^{2}{\\left(1.5707963267949 x \\right)} & \\text{for}\\: x \\leq 1 \\\\1 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":201}]},{"cell_type":"code","source":["f_X = diff(F_X, x)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GzCetRDnuUGU","executionInfo":{"status":"ok","timestamp":1698176497949,"user_tz":360,"elapsed":25,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ee8e6510-1676-4ffd-9e5b-be224da038c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x < 0), (3.14159265358979*sin(1.5707963267949*x)*cos(1.5707963267949*x), x <= 1), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x < 0 \\\\3.14159265358979 \\sin{\\left(1.5707963267949 x \\right)} \\cos{\\left(1.5707963267949 x \\right)} & \\text{for}\\: x \\leq 1 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":202}]},{"cell_type":"code","source":["P_X = integrate(f_X, (x, -oo, 1/4))\n","P_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zZtXSdVWvjlm","executionInfo":{"status":"ok","timestamp":1698176497949,"user_tz":360,"elapsed":24,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6ec2bdfe-ed13-4c2b-e4fc-eadfc1dea67f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.146446609406726"],"text/latex":"$\\displaystyle 0.146446609406726$"},"metadata":{},"execution_count":203}]},{"cell_type":"markdown","source":["# Ejercicio 9\n","\n","\\begin{equation}\n","  M_X(t)=\\frac{e^t}{4-3e^t}, t<-\\ln(0.75)     \n","\\end{equation}"],"metadata":{"id":"m8H8EZI0_Yuh"}},{"cell_type":"code","source":["from sympy import *\n","import sympy"],"metadata":{"id":"XfYwnfk4_aej"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t = symbols('t')"],"metadata":{"id":"S92onwoKACRR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["M_X = exp(t)/(4-3*exp(t))\n","M_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7kshIbGU_2dw","executionInfo":{"status":"ok","timestamp":1698176497949,"user_tz":360,"elapsed":23,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6ccfbb7f-22a5-484b-bbe2-b29df9d0b7b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["exp(t)/(4 - 3*exp(t))"],"text/latex":"$\\displaystyle \\frac{e^{t}}{4 - 3 e^{t}}$"},"metadata":{},"execution_count":206}]},{"cell_type":"code","source":["M_X_1 = diff(M_X, t).subs(t, 0)\n","M_X_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OMYo56fGAGjL","executionInfo":{"status":"ok","timestamp":1698176497949,"user_tz":360,"elapsed":22,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e6945633-0e2c-435e-ebc0-e7985197a2e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"],"text/latex":"$\\displaystyle 4$"},"metadata":{},"execution_count":207}]},{"cell_type":"code","source":["M_X_2 = diff(M_X, t, t).subs(t, 0)\n","M_X_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sVgv05I6ARfk","executionInfo":{"status":"ok","timestamp":1698176497950,"user_tz":360,"elapsed":22,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1d5940fd-a5c1-4113-cc33-c8f75a78f4fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28"],"text/latex":"$\\displaystyle 28$"},"metadata":{},"execution_count":208}]},{"cell_type":"markdown","source":["# Ejercicio 10\n","\n","\\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      xe^{-x} & \\text{si $x \\ge 0$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"FVY0b2wPAh_e"}},{"cell_type":"markdown","source":["### $M_{X}(x) = \\frac{1}{(1-t)^2}$"],"metadata":{"id":"c6JqKF3EA7aX"}},{"cell_type":"code","source":["from sympy import *\n","import sympy"],"metadata":{"id":"s7Oq5lpiA4AR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, t, w = symbols('x t w')"],"metadata":{"id":"_V9m43z6BZSL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise(\n","    (x*exp(-x), (x>=0)),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o97bkgjaBc27","executionInfo":{"status":"ok","timestamp":1698176498262,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"354e5a37-70df-409d-d4b4-7026a581ab1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((x*exp(-x), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} x e^{- x} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":211}]},{"cell_type":"code","source":["MGF_before_integration = simplify(exp(x*t)*f_X)\n","MGF_before_integration"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-dgWuOkMDiKg","executionInfo":{"status":"ok","timestamp":1698176498262,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2850d88f-5f61-4870-cb19-f04182f0dc36"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((x*exp(x*(t - 1)), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} x e^{x \\left(t - 1\\right)} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":212}]},{"cell_type":"code","source":["# Después de una breve manipulación\n","MGF_before_integration = Piecewise(\n","    (x*exp(-x*(1-t)), (x>=0)),\n","    (0, True)\n",")\n","MGF_before_integration"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zy-haBivC08-","executionInfo":{"status":"ok","timestamp":1698176498263,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"9a0f27d4-3a9e-4b07-c8e3-ee054da63c61"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((x*exp(-x*(1 - t)), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} x e^{- x \\left(1 - t\\right)} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":213}]},{"cell_type":"code","source":["MGF = integrate(MGF_before_integration, (x, 0, oo))\n","MGF"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UlHK5G7AUXVa","executionInfo":{"status":"ok","timestamp":1698176498580,"user_tz":360,"elapsed":329,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"4e2a37e5-5a4e-4433-f6ae-05e0d6982098"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Integral(Piecewise((x*exp(-x*(1 - t)), x >= 0), (0, True)), (x, 0, oo))"],"text/latex":"$\\displaystyle \\int\\limits_{0}^{\\infty} \\begin{cases} x e^{- x \\left(1 - t\\right)} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}\\, dx$"},"metadata":{},"execution_count":214}]},{"cell_type":"code","source":["# Integración por partes manual\n","\n","u = x\n","dv = exp(-x*(w))\n","\n","MGF = (u*integrate(dv, x) - diff(u)*integrate(integrate(dv, x), x))\n","MGF = MGF.subs(x, oo) - MGF.subs(x, 0)\n","MGF = MGF.subs(w, 1-t).args[2].args[0].args[0].args[0].args[0]\n","MGF"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gMEMZNJgTAAZ","executionInfo":{"status":"ok","timestamp":1698176498580,"user_tz":360,"elapsed":27,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"1f790477-6c34-4900-bb7f-4e272250f4b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1 - t)**(-2)"],"text/latex":"$\\displaystyle \\frac{1}{\\left(1 - t\\right)^{2}}$"},"metadata":{},"execution_count":215}]},{"cell_type":"markdown","source":["### $\\mathbb{E}[X]$"],"metadata":{"id":"KGvHJwubSS7J"}},{"cell_type":"code","source":["E_X = diff(MGF, t).subs(t, 0)\n","E_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFKzEKUOCQ_q","executionInfo":{"status":"ok","timestamp":1698176498580,"user_tz":360,"elapsed":25,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"60ae8e29-28af-460a-c4f4-2b0a2ffdfbd2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"],"text/latex":"$\\displaystyle 2$"},"metadata":{},"execution_count":216}]},{"cell_type":"markdown","source":["### $\\text{Var}[X]$"],"metadata":{"id":"4JZ8XK3iSdUY"}},{"cell_type":"code","source":["E_X_2 = diff(MGF, t, t).subs(t, 0)\n","E_X_2"],"metadata":{"id":"VtM-hY-3-s6J","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1698176498580,"user_tz":360,"elapsed":23,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"76ee4cc4-f326-46ac-d6bb-a0d0d65ce068"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"],"text/latex":"$\\displaystyle 6$"},"metadata":{},"execution_count":217}]},{"cell_type":"code","source":["variance = E_X_2 - E_X**2\n","variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bOm3LFBYSama","executionInfo":{"status":"ok","timestamp":1698176498580,"user_tz":360,"elapsed":19,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"8adf8747-2be4-4924-819a-da885d249161"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"],"text/latex":"$\\displaystyle 2$"},"metadata":{},"execution_count":218}]},{"cell_type":"markdown","source":["# Ejercicio 11\n","\n","\\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      kx + \\frac{1}{2} & \\text{si $-1 \\le x \\le 1$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"Rrvo9Yv9UwBK"}},{"cell_type":"code","source":["from sympy import *"],"metadata":{"id":"OVwDbdk5gHii"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, k, t = symbols('x k t')"],"metadata":{"id":"hMKgWmyWgJ9s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f_X = Piecewise(\n","    (k*x+ 1/2, (x>=-1) & (x<=1)),\n","    (0, True)\n",")\n","f_X.args[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wqhf5UnvVZvP","executionInfo":{"status":"ok","timestamp":1698176499270,"user_tz":360,"elapsed":18,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"8db9d996-918a-4eb4-e438-f3f665e29310"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(k*x + 0.5, (x >= -1) & (x <= 1))"],"text/latex":"$\\displaystyle \\left( k x + 0.5, \\  x \\geq -1 \\wedge x \\leq 1\\right)$"},"metadata":{},"execution_count":221}]},{"cell_type":"code","source":["MGF = integrate(f_X*exp(t*x), (x, 0, oo))\n","MGF"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nxq3q5p7gZcc","executionInfo":{"status":"ok","timestamp":1698176499270,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0858790a-3b68-49f6-878c-76955168542b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((-1.0*(-1.0*k + 0.5*t)/t**2 + 1.0*(1.0*k*t - 1.0*k + 0.5*t)*exp(t)/t**2, (t > -oo) & (t < oo) & Ne(t, 0)), (0.5*k + 0.5, True))"],"text/latex":"$\\displaystyle \\begin{cases} - \\frac{1.0 \\left(- 1.0 k + 0.5 t\\right)}{t^{2}} + \\frac{1.0 \\cdot \\left(1.0 k t - 1.0 k + 0.5 t\\right) e^{t}}{t^{2}} & \\text{for}\\: t > -\\infty \\wedge t < \\infty \\wedge t \\neq 0 \\\\0.5 k + 0.5 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":222}]},{"cell_type":"code","source":["E_X = diff(MGF, t).subs(t, 0)\n","E_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aaAVXbH9goXy","executionInfo":{"status":"ok","timestamp":1698176499271,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d3349ddb-d3c3-4111-8e1c-767ee9465480"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"],"text/latex":"$\\displaystyle 0$"},"metadata":{},"execution_count":223}]}]}