{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1hJmQjp14TAjhEugd3dECt7gD-trjBb05","timestamp":1701832011538}],"collapsed_sections":["u9APxHKqxH_U","kGQgxdJn8IHW","FeEQ4zbU9uiJ","WFnGkchA-LhP","P0JmCW9Oxt1q","BtEaNlj74fWQ","RWqH_l429Nre","H0MiMLIkF5E2","5AaskYmbJD3T","3o_2RPsXaAhr","wvnNe_x-EBi_","EwGTdxUaEvVq","dRB5dWZhPB8N","o1mckw5Zop6H","ThNyGnrxHBQZ","dyQ01B8NL5M-","24TEleEPZR5C","mfwtZQPdUEaR","yqdcxyr023hy","SjC5MtO7-N7y","3MQ8yQhiyKFH","sOxjqghxHpy4","6V0YwQIbRK2H"],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Proyecto Final: Probabilidad y Estadística Descriptiva\n","*Universidad Panamericana*\n","\n","## Integrantes del Equipo:\n","- Juan Álvaro Díaz\n","- Sebastián Fuentes\n","- Fernando Llaguno\n","- Leonardo Rueda\n","- Carlos Santiago\n"],"metadata":{"id":"yTO63sacFKqo"}},{"cell_type":"markdown","source":["# Ejercicio 1\n","\n"],"metadata":{"id":"u9APxHKqxH_U"}},{"cell_type":"markdown","source":["Se pide clasificar cada variable aleatoria como discreta o continua.\n","\n","| Variable Aleatoria | Tipo |\n","|-|-|\n","| Número de llegadas a una sala de emergencias entre la medianoche y las 6:00 am | **Discreta** |\n","| Peso de una caja de cereal | **Continua** |\n","| Duración de la próxima llamada telefónica saliente desde una oficina comercial | **Continua** |  \n","| Número de solicitantes de un puesto de trabajo | **Discreta** |\n","| Tiempo entre que los clientes ingresan a la línea de pago en una tienda minorista | **Continua** |\n","| Peso de la basura en un camión que llega a un vertedero | **Continua** |\n","| Número de pasajeros en un vehículo de pasajeros en una carretera en hora pico | **Discreta** |\n","| Número de días sin accidentes en un mes en una fábrica | **Discreta** |\n","| Temperatura de una taza de café servida en un restaurante | **Continua** |\n","| Cantidad promedio gastada en electricidad cada mes de julio por un hogar seleccionado al azar en un determinado estado | **Continua** |\n","| Cantidad de lluvia registrada en un aeropuerto un día | **Continua** |\n","| Número de estudiantes que realmente se inscriben en clases en una universidad el próximo semestre | **Discreta** |"],"metadata":{"id":"QY-IVlprK6ID"}},{"cell_type":"markdown","source":["#Ejercicio 2\n","\n"],"metadata":{"id":"kGQgxdJn8IHW"}},{"cell_type":"markdown","source":["Identifique el conjunto de valores posibles para cada variable aleatoria.\n"," 1.  El número de caras en dos lanzamientos de una moneda.\n"," 2. El peso promedio de los recién nacidos nacidos en un condado en particular durante un mes.\n"," 3. El número de monedas que coinciden cuando se lanzan tres monedas a la vez.\n"],"metadata":{"id":"3za9ILpDK8RJ"}},{"cell_type":"markdown","source":["## Número de caras en dos lanzamientos de moneda"],"metadata":{"id":"FeEQ4zbU9uiJ"}},{"cell_type":"code","source":["from itertools import product\n","C = ['H', 'T']\n","Omega = [*product(C, repeat=2)]\n","Omega"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JsD0Kh-k8h7A","executionInfo":{"status":"ok","timestamp":1702008333564,"user_tz":360,"elapsed":142,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5c0df9a2-53de-43de-8503-82d68b1e7b78"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('H', 'H'), ('H', 'T'), ('T', 'H'), ('T', 'T')]"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["Heads_count = {}\n","for x, y in Omega:\n","  counter = 0\n","  if x == 'H':\n","    counter += 1\n","  if y == 'H':\n","    counter += 1\n","  Heads_count[(x,y)]=counter\n","\n","Heads_count.values()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4mBhcNYY87bv","executionInfo":{"status":"ok","timestamp":1702008333908,"user_tz":360,"elapsed":152,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3465d397-2f64-45e4-e26c-05a703bdb736"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_values([2, 1, 1, 0])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["print(f\"El conjunto de valores que corresponde al número de caras en dos lanzamientos de moneda va de {min(Heads_count.values())} a {max(Heads_count.values())} (dentro de los enteros)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JEBHclQEVarc","executionInfo":{"status":"ok","timestamp":1702008333908,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"fefc1260-fea1-473f-dedc-227f030f9400"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["El conjunto de valores que corresponde al número de caras en dos lanzamientos de moneda va de 0 a 2 (dentro de los enteros)\n"]}]},{"cell_type":"markdown","source":["## El peso promedio de los recién nacidos nacidos en un condado en particular durante un mes.\n","\\begin{equation}\n","X = \\text{peso promedio de los recién nacidos en un condado en un mes} \\\\\n","X \\in \\mathbb{R}^+\n","\\end{equation}"],"metadata":{"id":"aM-G4Xd_9wcp"}},{"cell_type":"markdown","source":["## El número de monedas que coinciden cuando se lanzan tres monedas a la vez.\n"],"metadata":{"id":"WFnGkchA-LhP"}},{"cell_type":"code","source":["from itertools import product\n","C = ['H', 'T']\n","Omega = [*product(C, repeat=3)]\n","Omega"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OwEpFuhv-XTu","executionInfo":{"status":"ok","timestamp":1702008333908,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"10cd1a65-2d4d-48a2-80a0-117b1d0e5c37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('H', 'H', 'H'),\n"," ('H', 'H', 'T'),\n"," ('H', 'T', 'H'),\n"," ('H', 'T', 'T'),\n"," ('T', 'H', 'H'),\n"," ('T', 'H', 'T'),\n"," ('T', 'T', 'H'),\n"," ('T', 'T', 'T')]"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["Repeated_coins = {}\n","for x, y, z in Omega:\n","  counter = 0\n","  if x == y == z:\n","    counter += 3\n","  elif x == y:\n","    counter += 2\n","  elif x == z:\n","    counter += 2\n","  elif y == z:\n","    counter += 2\n","  Repeated_coins[(x,y,z)]=counter\n","\n","Repeated_coins"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q5cF_5Bs-cFe","executionInfo":{"status":"ok","timestamp":1702008334078,"user_tz":360,"elapsed":176,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7a9219e7-5676-4214-a619-5c734ea15cc4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{('H', 'H', 'H'): 3,\n"," ('H', 'H', 'T'): 2,\n"," ('H', 'T', 'H'): 2,\n"," ('H', 'T', 'T'): 2,\n"," ('T', 'H', 'H'): 2,\n"," ('T', 'H', 'T'): 2,\n"," ('T', 'T', 'H'): 2,\n"," ('T', 'T', 'T'): 3}"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["print(f\"El conjunto de valores que corresponde al número monedas que coinciden en tres lanzamientos va de {min(Repeated_coins.values())} a {max(Repeated_coins.values())} (dentro de los enteros)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DZjle-UaVkUR","executionInfo":{"status":"ok","timestamp":1702008334078,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6ca963de-c4b2-45de-be3f-b1eac669287a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["El conjunto de valores que corresponde al número monedas que coinciden en tres lanzamientos va de 2 a 3 (dentro de los enteros)\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 3"],"metadata":{"id":"P0JmCW9Oxt1q"}},{"cell_type":"markdown","source":["Identifique el conjunto de valores posibles para cada variable aleatoria.\n","1. El número de corazones en una mano de cinco cartas extraída de una baraja de 52 tarjetas.\n","2. La distancia que recorre cada día un coche de alquiler alquilado con tarifa diaria.\n","3. La cantidad de lluvia en un aeropuerto el próximo mes."],"metadata":{"id":"pMI-NIEIK1kP"}},{"cell_type":"markdown","source":["## Probabilidad de mano con 5 corazones"],"metadata":{"id":"BtEaNlj74fWQ"}},{"cell_type":"code","source":["from itertools import combinations, product"],"metadata":{"id":"hPUYlefo0_Pq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Palo = ['C', 'P', 'D', 'E']\n","Cartas = [*range(1,14)]\n","Omega = set(product(Palo, Cartas))\n","#Omega"],"metadata":{"id":"IyCZ0DFI1IuY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Cantidad de número de corazones\n","eventos_corazones = {carta for carta in Omega if carta[0] == 'C'}\n","eventos_corazones"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"stirf5851uAj","executionInfo":{"status":"ok","timestamp":1702008334079,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3b36e25a-0273-4588-d2c9-84e08f3b5d7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{('C', 1),\n"," ('C', 2),\n"," ('C', 3),\n"," ('C', 4),\n"," ('C', 5),\n"," ('C', 6),\n"," ('C', 7),\n"," ('C', 8),\n"," ('C', 9),\n"," ('C', 10),\n"," ('C', 11),\n"," ('C', 12),\n"," ('C', 13)}"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["E=[*combinations(eventos_corazones,5)]\n","#E"],"metadata":{"id":"t8uCVs573Osz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"La cardinalidad del evento donde saquemos una mano con 5 corazones es de {len(E)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z77x2G5C3q6s","executionInfo":{"status":"ok","timestamp":1702008334236,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"cb89b043-ec3e-4a9a-d9ea-4abc7d1f4a15"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["La cardinalidad del evento donde saquemos una mano con 5 corazones es de 1287\n"]}]},{"cell_type":"code","source":["Omega_5=[*combinations(Omega,5)]\n","#Omega_5"],"metadata":{"id":"lcwK9YH734E0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["P=len(E)/len(Omega_5)\n","print(f\"Probabilidad de obtener una mano con puros corazones = {P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ul1HERNv4OnH","executionInfo":{"status":"ok","timestamp":1702008334751,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"f8dfacd1-4b42-4f5d-9cdf-a5788bb9f061"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de obtener una mano con puros corazones = 0.0005\n"]}]},{"cell_type":"markdown","source":["## Distancia que recorre cada día un coche de alquiler alquilado con tarifa diaria.\n","\n","\\begin{equation}\n","X = \\text{distancia recorrida}\\\\\n","X \\in \\mathbb{R}^+\n","\\end{equation}"],"metadata":{"id":"S2sKV-Fr4kpX"}},{"cell_type":"markdown","source":["##Cantidad de lluvia en un aeropuerto el próximo mes.\n","\n","\\begin{equation}\n","X = \\text{lluvia}\\\\\n","X \\in \\mathbb{R}^+\n","\\end{equation}"],"metadata":{"id":"33jNUJoY5DC-"}},{"cell_type":"markdown","source":["# Ejercicio 4\n","\n"],"metadata":{"id":"RWqH_l429Nre"}},{"cell_type":"markdown","source":["Sean:\n","* $M$: Evento que la persona elegida es mujer.\n","* $H$: Evento que la persona elegida es hombre.\n","* $D$: Evento que la persona recibe un 10 en el examen.\n","\n","Se sabe que:\n","* $P(D|M) = 0.3$: Probabilidad de sacar 10 dado que es mujer.\n","* $P(D|H) = 0.25$: Probabilidad de sacar 10 dado que es hombre.\n","\n","Se desea calcular $P(M|D)$, probabilidad de que sea mujer dado que sacó 10. Por Bayes:\n","\n","$$P(M|D) = \\frac{P(D|M)P(M)}{P(D)}$$\n","\n","Despejando $P(D)$ y sustituyendo:\n","\n","$$P(M|D) = \\boxed{0.545}$$"],"metadata":{"id":"SIThgxGVKwCn"}},{"cell_type":"code","source":["prob_D_dado_M = 0.3\n","prob_D_dado_H = 0.25\n","prob_M = 0.5"],"metadata":{"id":"dhWmBVQHDcqc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prob_M_dado_D = (prob_D_dado_M * prob_M) / ((prob_D_dado_M * prob_M) + (prob_D_dado_H * (1 - prob_M)))\n","print(f\"P(M|D): {prob_M_dado_D:.4f}\")"],"metadata":{"id":"w-lifLU7Tu7I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008334951,"user_tz":360,"elapsed":207,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b2b7ae6c-f69f-44f7-98fe-a01752325bc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P(M|D): 0.5455\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 5\n","\n","\n"],"metadata":{"id":"H0MiMLIkF5E2"}},{"cell_type":"markdown","source":["Sean:\n","* $G$: Evento que Gabriela ha seleccionado 2 ases\n","* $P$: Evento que Pedro tiene exactamente 1 as\n","\n","Se sabe que:\n","* Gabriela y Pedro escogen 13 cartas de un deck de 52\n","* Hay 4 ases en el deck\n","\n","Se desea calcular $P(P|G)$. Aplicando Bayes:\n","\n","$$P(P|G) = \\frac{P(G|P)P(P)}{P(G)}$$\n","\n","Como se asume independencia entre las selecciones:\n","\n","$$P(P|G) = P(P) = \\frac{\\binom{4}{1}\\binom{48}{12}}{\\binom{52}{13}}$$\n"],"metadata":{"id":"3-WIsVxPKtC9"}},{"cell_type":"code","source":["import math"],"metadata":{"id":"AmISfnf3Gi4T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cards = 52\n","select_cards = 13\n","ace = 4\n","ace_P = 1"],"metadata":{"id":"QErzr_8aR7qJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p_P = math.comb(ace, ace_P) * math.comb(cards - ace, select_cards - ace_P) / math.comb(cards, select_cards)\n","\n","# Probabilidad condicional P(P|G) = P(P)\n","p_P_dado_G = p_P"],"metadata":{"id":"xsv2lxjVR-aD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"P(P|G) = P(P) = {p_P_dado_G:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2E9H_Bw1SAHr","executionInfo":{"status":"ok","timestamp":1702008334952,"user_tz":360,"elapsed":19,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"12af19c5-b19a-41be-94f5-5e9ead8e90cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P(P|G) = P(P) = 0.4388\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 6"],"metadata":{"id":"5AaskYmbJD3T"}},{"cell_type":"markdown","source":["Se tiene una urna que inicialmente contiene 5 bolas azules y 8 bolas rojas. Cada vez que se elige una bola, se regresa a la urna junto con otra adicional del mismo color.\n","\n","Se pide:\n","1. Calcular probabilidad de elegir 3 bolas azules en 3 extracciones.  \n","2. Calcular probabilidad de obtener solo 1 azul en 3 extracciones.\n","\n","**Solución:**\n"," 3 bolas azules: En la primera extracción, la urna tiene 5 azules y 8 rojas. En la segunda, 6 azules y 8 rojas (se repuso la azul). En la tercera, 7 azules y 8 rojas.\n","\n","La probabilidad de sacar azul en cada extracción es:\n","$$\n","P(A_1) = \\frac{5}{13},\\;\n","P(A_2) = \\frac{6}{14},\\;  \n","P(A_3) = \\frac{7}{15}\n","$$\n","\n","Por independencia:\n","$$ P(3\\,\\text{azules}) = P(A_1)P(A_2)P(A_3) = \\boxed{\\frac{5\\cdot 6 \\cdot 7}{13 \\cdot 14 \\cdot 15}} $$\n","\n","**1 azul:**\n","\n","La probabilidad de obtener el azul en la primera extracción y luego rojos es:\n","$$P(A_1, R_2, R_3) = \\frac{5}{13}\\frac{8}{14}\\frac{8}{14}$$\n","\n","Para obtener el azul en la 2da o 3ra extracción se debe hacer el análisis de casos:\n","\n","\\begin{align*}\n","    P(R_1, A_2, R_3) &= \\frac{8}{13}\\frac{5}{13}\\frac{8}{14}\\\\\n","    P(R_1, R_2, A_3) &= \\frac{8}{13}\\frac{8}{13}\\frac{5}{13}\n","\\end{align*}\n","\n","Por la regla de la suma:\n","\n","$$P(1\\,\\text{azul}) = P(A_1, R_2, R_3) + P(R_1, A_2, R_3) + P(R_1, R_2, A_3) = \\boxed{0.406}$$"],"metadata":{"id":"qP1QMyveLjPQ"}},{"cell_type":"code","source":["from itertools import *"],"metadata":{"id":"F89W92ECKsSk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Definamos 1 como azul y 0 como rojo. Calculemos el espacio muestral.\n","O = [*product([0,1], repeat=3)]\n","O"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zs34F15UOGVw","executionInfo":{"status":"ok","timestamp":1702008334952,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7fa4784e-34e5-4729-a282-b934d660c443"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(0, 0, 0),\n"," (0, 0, 1),\n"," (0, 1, 0),\n"," (0, 1, 1),\n"," (1, 0, 0),\n"," (1, 0, 1),\n"," (1, 1, 0),\n"," (1, 1, 1)]"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["# Hagamos un diccionario donde pongamos los diferentes elementos del espacio muestral con sus respectivas probabilidades.\n","P_azul = {}\n","for i in O:\n","    A = 5\n","    R = 8\n","    pt = 1\n","    for n in range(0, 3):\n","        if i[n] == 1:\n","            p = A / (A + R)\n","            A += 1\n","            pt *= p\n","            #print(pt)\n","        else:\n","            p = R/(A+R)\n","            pt *= p\n","    P_azul[tuple(i)] = pt  # Agregar pt al diccionario con clave i\n","\n","P_azul"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JdadPqXKQxm6","executionInfo":{"status":"ok","timestamp":1702008334952,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"75c08515-cd96-463a-ef2e-ec31c28a1ae0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{(0, 0, 0): 0.23304506144742834,\n"," (0, 0, 1): 0.1456531634046427,\n"," (0, 1, 0): 0.1352493660185968,\n"," (0, 1, 1): 0.1014370245139476,\n"," (1, 0, 0): 0.12558869701726844,\n"," (1, 0, 1): 0.09419152276295133,\n"," (1, 1, 0): 0.0879120879120879,\n"," (1, 1, 1): 0.07692307692307693}"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["# Probabilidad de sacar 3 azules\n","print(f\"Probabilidad de sacar tres azules = {P_azul[(1,1,1)]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WcQ-PBvVXbu","executionInfo":{"status":"ok","timestamp":1702008335185,"user_tz":360,"elapsed":246,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ad3e3cf7-598c-4ed5-d7b6-9ba258435bfc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de sacar tres azules = 0.0769\n"]}]},{"cell_type":"code","source":["# Probabilidad de solo una azul\n","P_1_azul = {}\n","\n","for k,v in P_azul.items():\n","  if sum(k) == 1:\n","    P_1_azul[k] = P_azul[k]\n","\n","print(f\"Probabilidad de sacar una azul = {sum(P_1_azul.values()):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BM7Xxl-SVlVb","executionInfo":{"status":"ok","timestamp":1702008335185,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"360971ad-3886-438e-83cd-dfe6259bb565"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de sacar una azul = 0.4065\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 7\n","\n"],"metadata":{"id":"3o_2RPsXaAhr"}},{"cell_type":"markdown","source":["\n","**Datos**:\n","* Proporción de producción máquina A: $P(A) = 0.25$  \n","* Proporción de producción máquina B: $P(B) = 0.35$\n","* Proporción de producción máquina C: $P(C) = 0.40$\n","* Defectuosos de máquina A: $P(D|A) = 0.05$\n","* Defectuosos de máquina B: $P(D|B) = 0.04$\n","* Defectuosos de máquina C: $P(D|C) = 0.02$\n","\n","**Se desea calcular**: $P(A|D)$, probabilidad de que el foco defectuoso provenga de la máquina A.\n","\n","Solución:\n","\\begin{align*}\n","P(D) &= P(D|A)P(A) + P(D|B)P(B) + P(D|C)P(C)\\\\\n","     &= 0.05\\cdot0.25 + 0.04\\cdot0.35 + 0.02\\cdot0.40 = 0.035\n","\\end{align*}\n","\n","Aplicando Bayes:\n","\\begin{align*}\n","P(A|D) &= \\frac{P(D|A)P(A)}{P(D)}\\\\\n","       &= \\frac{0.05\\cdot 0.25}{0.035}\\\\  \n","       &= \\boxed{0.362}  \n","\\end{align*}"],"metadata":{"id":"l6tM70LYLB_k"}},{"cell_type":"code","source":["p_A = 0.25\n","p_B = 0.35\n","p_C = 0.40\n","p_D_dado_A = 0.05\n","p_D_dado_B = 0.04\n","p_D_dado_C = 0.02"],"metadata":{"id":"uPWOuYaMaifW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Calcular la probabilidad de P(D)\n","p_D = p_D_dado_A * p_A + p_D_dado_B * p_B + p_D_dado_C * p_C\n","\n","# Calcular la probabilidad condicional P(A|D)\n","p_A_dado_D = (p_D_dado_A * p_A) / p_D"],"metadata":{"id":"Fr5dzWdQWBvM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"P(A|D) = {p_A_dado_D:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dh_Skdz8WC3Q","executionInfo":{"status":"ok","timestamp":1702008335186,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"53f951ed-3755-4559-9b1a-d814f2187a36"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P(A|D) = 0.3623\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 8\n"],"metadata":{"id":"wvnNe_x-EBi_"}},{"cell_type":"markdown","source":["Una firma de inversionistas ofrece a sus clientes bonos que maduran con respecto al número de años. Dado que la distribución acumulada de T, el número de años a la madurez para un bono seleccionado al azar, es\n","\n","\\begin{equation}\n","F_T(t)\n","\\begin{cases}\n","0, & t<1,\\\\\n","1/4, & 1 \\le t < 3,\\\\\n","1/2, & 3 \\le t < 5, \\\\\n","3/4, & 5 \\le t < 7, \\\\\n","1, & t \\ge 7\n","\\end{cases}\n","\\end{equation}"],"metadata":{"id":"wxLbveEgM9kF"}},{"cell_type":"code","source":["from sympy import *"],"metadata":{"id":"e8-p9vzOE7wp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t = symbols('t', Naturals0=True)\n","F_T = Piecewise(\n","    (0, (t < 1)),\n","    (1/4, (1 <= t) & (t < 3)),\n","    (1/2, (3 <= t) & (t < 5)),\n","    (3/4, (5 <= t) & (t < 7)),\n","    (1, (t >= 7))\n",")\n","F_T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8BDpjO1vE-HC","executionInfo":{"status":"ok","timestamp":1702008335409,"user_tz":360,"elapsed":232,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"f3344ee9-75f6-47d9-c099-77199d21b0bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, t < 1), (0.25, t < 3), (0.5, t < 5), (0.75, t < 7), (1, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: t < 1 \\\\0.25 & \\text{for}\\: t < 3 \\\\0.5 & \\text{for}\\: t < 5 \\\\0.75 & \\text{for}\\: t < 7 \\\\1 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(T=5)$"],"metadata":{"id":"ypXOcijIGLzZ"}},{"cell_type":"code","source":["P = P = simplify(F_T.subs(t, 5)-F_T.subs(t, 4))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MKSTTk5HFY0D","executionInfo":{"status":"ok","timestamp":1702008335409,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"af36767b-54fc-48d7-a5e7-f3bc32d4bd34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.2500\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(T>3)$"],"metadata":{"id":"62g-ftgtGf3l"}},{"cell_type":"code","source":["P = simplify(1 - F_T.subs(t, 4))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fX3R9eW1GfLg","executionInfo":{"status":"ok","timestamp":1702008335409,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"def40f67-db5b-4950-dde0-c1c04375acf5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.5000\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(T \\le 5 | T \\ge 2)$"],"metadata":{"id":"rGXHYLwAHN5B"}},{"cell_type":"code","source":["P = simplify((F_T.subs(t, 5) - F_T.subs(t, 2)) / (1 - F_T.subs(t, 1)))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h4eDdaVUHKJT","executionInfo":{"status":"ok","timestamp":1702008335650,"user_tz":360,"elapsed":251,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"79abc4f4-4109-405f-fecb-75a6442a479c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.6667\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 9\n"],"metadata":{"id":"EwGTdxUaEvVq"}},{"cell_type":"markdown","source":["\\begin{equation}\n","  f_{X}(x) =\n","    \\begin{cases}\n","      ce^{-4x} & \\text{si $x \\ge 0$}\\\\\n","      0 & \\text{e.o.c}\n","    \\end{cases}       \n","\\end{equation}"],"metadata":{"id":"E51TnRXTNJtP"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"uM8syydsEvBh"},"outputs":[],"source":["from sympy import *\n","from sympy.plotting import plot"]},{"cell_type":"code","source":["x, c = symbols('x c')\n","f_X = Piecewise(\n","    (c*exp(-4*x), (x>=0) ),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bOV8Py1oQyB_","executionInfo":{"status":"ok","timestamp":1702008335654,"user_tz":360,"elapsed":47,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5795fca6-fc24-4971-9e9c-0f3008354b2b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((c*exp(-4*x), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} c e^{- 4 x} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["F_X = integrate(f_X, (x,-oo,oo))\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ch14V9WWR-mW","executionInfo":{"status":"ok","timestamp":1702008335657,"user_tz":360,"elapsed":48,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"f33bfe2a-838c-49e9-b48b-8f4f8b9fc054"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["c/4"],"text/latex":"$\\displaystyle \\frac{c}{4}$"},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# Resolvemos el resultado de la integral para encontrar el valor de c\n","c_value = solve(Eq(F_X,1), c)[0]\n","c_value"],"metadata":{"id":"DCtgYXKmSM6p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008335658,"user_tz":360,"elapsed":45,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ae2d0726-e935-40c5-830c-af2cc5c10a0b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"],"text/latex":"$\\displaystyle 4$"},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["# Sustituimos el valor de c en la función de densidad\n","f_X = f_X.subs(c,c_value)\n","f_X"],"metadata":{"id":"KHQwDHOPSzik","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008335658,"user_tz":360,"elapsed":42,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"10e3ccbc-2f3c-4957-d686-ecee2736af01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((4*exp(-4*x), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 4 e^{- 4 x} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["F_X = integrate(f_X, x)\n","F_X"],"metadata":{"id":"_WQoXOKXTDx6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008335659,"user_tz":360,"elapsed":40,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c2b19e6f-bf6c-4a6e-d307-3d2ae1175221"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x <= 0), (1 - exp(-4*x), True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x \\leq 0 \\\\1 - e^{- 4 x} & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["plot(F_X, (x,-5,5), xlabel='x', ylabel='F(X)')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QdLvvRjGTrJg","executionInfo":{"status":"ok","timestamp":1702008335908,"user_tz":360,"elapsed":286,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"34001e51-cdea-477f-f4a2-deb8c385a317"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<sympy.plotting.plot.Plot at 0x7bd4dc09d060>"]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","source":["\\begin{equation}\n","  \\mathbb{P}(2<X<5)\n","\\end{equation}"],"metadata":{"id":"MmLQOYIsUZT7"}},{"cell_type":"code","source":["# Probabilidad de la función de 2 a 5.\n","P = integrate(f_X, (x, 2, 5))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jtgDy5KegSGl","executionInfo":{"status":"ok","timestamp":1702008336057,"user_tz":360,"elapsed":198,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"87066ac2-dd86-48b6-e18f-5f4922252bce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.0003\n"]}]},{"cell_type":"code","source":["# Esperanza\n","E_X = integrate(x*f_X, (x, -oo, oo))\n","print(f\"E[X]={E_X:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lxl-dCNvgZtZ","executionInfo":{"status":"ok","timestamp":1702008336057,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a7aa21f4-654a-4918-c19d-1fe66fc13d03"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["E[X]=0.2500\n"]}]},{"cell_type":"code","source":["# Varianza\n","E_X_2 = integrate(x**2*f_X, (x, -oo, oo))\n","E_X_2\n","\n","Var_X = E_X_2 - E_X**2\n","print(f\"Var[X]={Var_X:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0RboyhGuN_z_","executionInfo":{"status":"ok","timestamp":1702008336365,"user_tz":360,"elapsed":318,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a882b3af-0699-4cb3-899d-26768b1a70ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Var[X]=0.0625\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 10\n"],"metadata":{"id":"dRB5dWZhPB8N"}},{"cell_type":"markdown","source":["Supongamos que el tiempo (en horas) necesario para reparar un automóvil es una\n","variable aleatoria distribuida exponencialmente con parámetro λ = 1/2. ¿Cuál es la probabilidad de\n","que el tiempo de reparación supere las 4 horas? Si excede las 4 horas ¿cuál es la probabilidad de que\n","exceda las 8 horas?"],"metadata":{"id":"u_9p7e8INLlp"}},{"cell_type":"code","source":["from scipy.stats import expon"],"metadata":{"id":"baFRn57wl1f4","executionInfo":{"status":"ok","timestamp":1702046841022,"user_tz":360,"elapsed":1307,"user":{"displayName":"Julio César Galindo López","userId":"09482367279259088001"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Probabilidad que supere las 4 horas dado parámetro lambda = 1/2\n","lam = 1/2\n","print(f\"P={expon.sf(4, scale=1/lam):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aARZ69kBmDxe","executionInfo":{"status":"ok","timestamp":1702046841931,"user_tz":360,"elapsed":179,"user":{"displayName":"Julio César Galindo López","userId":"09482367279259088001"}},"outputId":"7dd516a0-a657-4413-d13e-f5416e8440b0"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.1353\n"]}]},{"cell_type":"code","source":["# Probabilidad condicional. Probabilidad de exceder las 8 horas dado que excedió las 4 horas.\n","print(f\"P={expon.sf(8,scale=1/lam)/expon.sf(4, scale=1/lam):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2_7ffz4AoVNE","executionInfo":{"status":"ok","timestamp":1702046843644,"user_tz":360,"elapsed":3,"user":{"displayName":"Julio César Galindo López","userId":"09482367279259088001"}},"outputId":"9ddffcd4-3262-478c-b75d-b9e48b5c0fb4"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.1353\n"]}]},{"cell_type":"markdown","source":["### Using sympy\n"],"metadata":{"id":"o1mckw5Zop6H"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"M-TmVijrPSvx"},"outputs":[],"source":["from sympy import *\n","from sympy.plotting import plot"]},{"cell_type":"code","source":["# Planteamiento de una función de distribución exponencial\n","x, L = symbols('x L')\n","f_X = Piecewise(\n","    (1/2*exp(-1/2*x), (x>=0) ),\n","    (0, True)\n",")\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008336534,"user_tz":360,"elapsed":20,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7ecd7310-5a84-4a70-913b-d31fedf6e84f","id":"q7ZUy-2sPSvy"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0.5*exp(-0.5*x), x >= 0), (0, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0.5 e^{- 0.5 x} & \\text{for}\\: x \\geq 0 \\\\0 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["# Probabilidad de que exceda 4 horas.\n","P = integrate(f_X, (x, 4, oo))\n","print(f\"P={P:.4f}\")"],"metadata":{"id":"Zr7g9sd7PuXK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008336535,"user_tz":360,"elapsed":19,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2f5b5aea-538d-46db-89ec-22d44473cb0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.1353\n"]}]},{"cell_type":"code","source":["# Probabilidad condicional. Probabilidad de exceder las 8 horas dado que excedió las 4 horas.\n","P = N(integrate(f_X,(x,8,oo))/integrate(f_X, (x, 4, oo)),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"id":"nMAU1XJlQPAK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008336674,"user_tz":360,"elapsed":154,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7389a031-8373-4f0b-d04b-4365d9e8d793"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.1353\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 11\n","\n"],"metadata":{"id":"ThNyGnrxHBQZ"}},{"cell_type":"markdown","source":["Un trabajador puede llegar al lugar de trabajo en cualquier momento entre las 6 y las 7 de la mañana con la misma probabilidad.\n","\n","* Calcule y grafique la función de densidad de probabilidad de la variable que mide el tiempo\n","de llegada.\n","* Calcular y grafica la función de distribución.\n","* Calcula la probabilidad de llegar antes de las seis y cuarto y después de las seis y media.\n","* ¿Cuál es la hora prevista de llegada?"],"metadata":{"id":"zspH126UNOn_"}},{"cell_type":"code","source":["from scipy.stats import uniform\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"wM9kwoT4oyGu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a, b = 6, 7\n","x = np.linspace(5,8,1000)"],"metadata":{"id":"jfvh_NHnpwGy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(x,uniform.pdf(x,a,b-a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_nzbGI22qsso","executionInfo":{"status":"ok","timestamp":1702008337277,"user_tz":360,"elapsed":443,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6fbbd9a6-3935-42ce-fe38-71018967d833"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7bd4cf036200>]"]},"metadata":{},"execution_count":90},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Probabilidad de llegar antes de las 6:15\n","print(f\"Probabilidad de llegar entes de las 6:15 es {uniform.cdf(6.25, a, b-a):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E_8iX4ZRZXIW","executionInfo":{"status":"ok","timestamp":1702008337278,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6f46d1ce-f2db-4f1a-82ea-c3359c12b50b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de llegar entes de las 6:15 es 0.2500\n"]}]},{"cell_type":"code","source":["# Probabilidad de llegar después de las 6:30\n","print(f\"Probabilidad de llegar después de las 6:30 es {uniform.sf(6.5, a, b-a):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5PzilfBZsFq","executionInfo":{"status":"ok","timestamp":1702008337279,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"eddad5b5-70a1-42ff-bc62-101b6ae1a60e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de llegar después de las 6:30 es 0.5000\n"]}]},{"cell_type":"code","source":["# Hora prevista de llegada\n","print(f\"mu={uniform.mean(a, b-a):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SJSpN14FbG2U","executionInfo":{"status":"ok","timestamp":1702008337279,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6ac153be-34d6-46af-9977-97f1279c64e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["mu=6.5000\n"]}]},{"cell_type":"markdown","source":["### Using sympy"],"metadata":{"id":"FuL4YE8cpwmK"}},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot"],"metadata":{"id":"V9qp1QKZI2dM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Dado que es con la misma probabilidad, tomamos que la distiburción es uniforme.\n","x = symbols('x')\n","a, b = 6, 7\n","U = Piecewise(\n","    (1, (a<=x) & (x<=b)),\n","    (0, True))\n","P_U = integrate(U,(x, a, b))\n","P_U"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eb30V9OUGzk0","executionInfo":{"status":"ok","timestamp":1702008337279,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"84ae1345-90f4-488d-850d-2b5076c4ee15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"],"text/latex":"$\\displaystyle 1$"},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["plot(U, (x,0,10), xlabel='x', ylabel='f(X)')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YoHZGHeMJVye","executionInfo":{"status":"ok","timestamp":1702008337825,"user_tz":360,"elapsed":557,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"f23d1e85-56fb-4fbb-99cb-28d47eafcaa1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<sympy.plotting.plot.Plot at 0x7bd4cf0a08e0>"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["# Calculamos ahora la función de distribución\n","F_X = integrate(U)\n","F_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IEaCK2UUJc0i","executionInfo":{"status":"ok","timestamp":1702008337844,"user_tz":360,"elapsed":95,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"155b87d7-3f30-45d6-be87-2b11d46ed0a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Piecewise((0, x <= 6), (x - 6, x <= 7), (1, True))"],"text/latex":"$\\displaystyle \\begin{cases} 0 & \\text{for}\\: x \\leq 6 \\\\x - 6 & \\text{for}\\: x \\leq 7 \\\\1 & \\text{otherwise} \\end{cases}$"},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["plot(F_X, (x,0,10), xlabel='x', ylabel='F(X)')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zc2ECfFeLCKL","executionInfo":{"status":"ok","timestamp":1702008338286,"user_tz":360,"elapsed":511,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"66874890-6850-4b85-92af-10f763ddc4d9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<sympy.plotting.plot.Plot at 0x7bd4cf0a1a50>"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["# Probabilidad de llegar antes de las 6:15 y después de 6:30.\n","P_0 = integrate(U, (x,-oo,6.25))\n","P_1 = integrate(U, (x,6.5, oo))\n","\n","print(f\"Probabilidad de llegar entes de las 6:15 es {P_0:.4f} y después de las 6:30 es {P_1:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FPLhIn6DLGRN","executionInfo":{"status":"ok","timestamp":1702008338458,"user_tz":360,"elapsed":180,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"aa6951e0-57e6-4c7e-8e08-ba9f8cf87c6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad de llegar entes de las 6:15 es 0.2500 y después de las 6:30 es 0.5000\n"]}]},{"cell_type":"code","source":["E_X = integrate(x*U, (x, -oo,oo))\n","print(f\"mu={E_X:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ES7Np8VpLhWG","executionInfo":{"status":"ok","timestamp":1702008338459,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e219e75e-a343-494d-f8e2-f2dc6e08afa1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["mu=6.5000\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 12\n"],"metadata":{"id":"dyQ01B8NL5M-"}},{"cell_type":"markdown","source":["El número de estudiantes que se matriculan en un curso de economía es una variable aleatoria Poisson con una media de 100. El profesor a cargo del curso ha decidido que si el número de matriculados es 120 o más, impartirá el curso en dos secciones separadas, mientras que si se inscriben menos de 120 estudiantes, enseñará a todos los estudiantes juntos en una sola sección ¿Cuál es la probabilidad de que el profesor deba impartir dos secciones?"],"metadata":{"id":"MqjzR1ZaNRAk"}},{"cell_type":"code","source":["from scipy.stats import poisson\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"98BKNlaPZRVN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Probabilidad de impartir 2 secciones\n","print(f\"P={poisson.sf(119, 100):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-D5Hb8gQbyn9","executionInfo":{"status":"ok","timestamp":1702008338461,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"79357cac-b8c6-43e1-d89a-90fc0ef357d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.0282\n"]}]},{"cell_type":"code","source":["x = np.arange(poisson.ppf(0.01, 100),\n","              poisson.ppf(0.99, 100))\n","plt.plot(x,poisson.pmf(x,100))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"AmrGcHVbcgr-","executionInfo":{"status":"ok","timestamp":1702008338754,"user_tz":360,"elapsed":306,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"8150f15a-a50b-4e98-a0d5-d98545bba23f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7bd4cefc5360>]"]},"metadata":{},"execution_count":103},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Using sympy"],"metadata":{"id":"24TEleEPZR5C"}},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot"],"metadata":{"id":"8cd3iJVdMWz9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["L, x = symbols('L x', integer=True)\n","f_X = (L**x) / factorial(x) * exp(-L)"],"metadata":{"id":"CYAdf9LcNSgE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Resolver para L dado E(X) es igual a 100\n","f_X = f_X.subs(L, 100)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":51},"id":"hgUqoZLMOTZm","executionInfo":{"status":"ok","timestamp":1702008402558,"user_tz":360,"elapsed":130,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c0d35123-b323-475a-c2f6-272010ffe32e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100**x*exp(-100)/factorial(x)"],"text/latex":"$\\displaystyle \\frac{100^{x}}{e^{100} x!}$"},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["plot(f_X, (x, 50, 150))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":501},"id":"efRRxXeIPVhD","executionInfo":{"status":"ok","timestamp":1702008403894,"user_tz":360,"elapsed":613,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"71a43b6a-4a7e-4c7c-b2cf-be2d56e51b66"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<sympy.plotting.plot.Plot at 0x7bd4cd034760>"]},"metadata":{},"execution_count":172}]},{"cell_type":"code","source":["# Probabilidad de impartir 2 secciones.\n","P = N(1-Sum(f_X,(x,0,119)).doit(),4)\n","P"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"FlwEmZYBRN7r","executionInfo":{"status":"ok","timestamp":1702008405080,"user_tz":360,"elapsed":435,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c712642a-6d54-42d6-9d1d-97d1b96e24e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.02823"],"text/latex":"$\\displaystyle 0.02823$"},"metadata":{},"execution_count":173}]},{"cell_type":"markdown","source":["# Ejercicio 13\n"],"metadata":{"id":"mfwtZQPdUEaR"}},{"cell_type":"markdown","source":["Sea Z una variable aleatoria con distribución normal estándar. Calcula las siguientes probabilidades:"],"metadata":{"id":"WjZUBieNNUtm"}},{"cell_type":"code","source":["from scipy.stats import norm\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"kh49RV7Idqgv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RW3ztHd9UmVK","executionInfo":{"status":"ok","timestamp":1702008358036,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2f750f60-2743-4cc9-d039-082dbae22744"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":110}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(Z<1.24)$"],"metadata":{"id":"uHuV7zByUjLQ"}},{"cell_type":"code","source":["print(f\"P={norm.cdf(1.24, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"66G47cEvd0vc","executionInfo":{"status":"ok","timestamp":1702008358258,"user_tz":360,"elapsed":234,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"47671267-9ea5-4c6b-e247-304076351f3c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.8925\n"]}]},{"cell_type":"code","source":["P = integrate(f_X, (x, -oo,1.24))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"70iQg8VfSVt4","executionInfo":{"status":"ok","timestamp":1702008359496,"user_tz":360,"elapsed":1241,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6345cbfb-1d0d-404c-9534-80109d51c265"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.8925\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(Z>-0.68)$"],"metadata":{"id":"JTwsLw6UXGW_"}},{"cell_type":"code","source":["print(f\"P={norm.sf(-0.68, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiqJl88neKnH","executionInfo":{"status":"ok","timestamp":1702008359496,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"549dd68b-1027-4a48-b2b9-92975f12237b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.7517\n"]}]},{"cell_type":"code","source":["P = integrate(f_X, (x, -0.68,oo))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dsFSSXubXDX4","executionInfo":{"status":"ok","timestamp":1702008360563,"user_tz":360,"elapsed":1072,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"fa756fba-f4f1-42fe-e0a4-259483050faf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.7517\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(-1.35\\leq Z \\leq0.44)$"],"metadata":{"id":"GDPmdej1XOlI"}},{"cell_type":"code","source":["print(f\"P={norm.cdf(0.44, 0,1)-norm.cdf(-1.35, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mrby2KFieQLu","executionInfo":{"status":"ok","timestamp":1702008360563,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d5495b97-6d01-4fce-95bb-6934bbf59e2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.5815\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dPu2YO4sfy9P","executionInfo":{"status":"ok","timestamp":1702008360564,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3d07afcd-b462-466f-ba2c-a718488196dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["P = integrate(f_X, (x, -1.35,0.44)).doit()\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BdhxOIQaXMN3","executionInfo":{"status":"ok","timestamp":1702008360840,"user_tz":360,"elapsed":287,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0820411b-6384-4aa0-bb9b-812ebaa202c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.5815\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(Z < x)=0.6406$"],"metadata":{"id":"OJhCiEy00Zgz"}},{"cell_type":"code","source":["print(f\"x={norm.ppf(0.6406, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JG0X_qPFefqT","executionInfo":{"status":"ok","timestamp":1702008360840,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"52a8c447-638e-4d90-df0d-07f26007f569"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=0.3601\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qNw17mkVf0hG","executionInfo":{"status":"ok","timestamp":1702008360841,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c7a3e865-d22c-44d5-cfcd-d5b65a28de0d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["# Resolvamos haciendo la integral hasta x e igualando al valor de la probabilidad.\n","x_value = solve(integrate(f_X, (x, -oo,x))-0.6406,x)\n","print(f\"x value={x_value[0]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SsmZ0u9aXTt8","executionInfo":{"status":"ok","timestamp":1702008361162,"user_tz":360,"elapsed":332,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"65a58d85-4b70-4c0c-dffb-6249695bfa19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x value=0.3601\n"]}]},{"cell_type":"code","source":["# Comprobemos\n","P = integrate(f_X, (x,-oo,x_value[0]))\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ny4LUdlt04UM","executionInfo":{"status":"ok","timestamp":1702008362028,"user_tz":360,"elapsed":870,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"318fc020-fb7a-4180-bd24-d7ed9f7a3538"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.6406\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(Z > x)=0.0606$"],"metadata":{"id":"NaZ5GSqP1wC9"}},{"cell_type":"code","source":["print(f\"x={norm.ppf(1-0.0606, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1Yr1QMlexs2","executionInfo":{"status":"ok","timestamp":1702008362028,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"cc4e8844-1114-46ef-cc5d-b1788940e1d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=1.5498\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s1OI_ioNf17G","executionInfo":{"status":"ok","timestamp":1702008362029,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"839924a0-3410-4567-bb6c-1f32af59c244"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["# Resolvamos haciendo la integral hasta x e igualando al valor de la probabilidad.\n","x_value = solve(integrate(f_X, (x, x,oo))-0.0606,x)\n","print(f\"x value={x_value[0]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008362501,"user_tz":360,"elapsed":484,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a82efb5b-2584-4f4a-916e-5850fb60d0f4","id":"CzuOm6Zp10yW"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x value=1.5498\n"]}]},{"cell_type":"code","source":["# Comprobemos\n","P = N(integrate(f_X, (x,x_value[0],oo)),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008362694,"user_tz":360,"elapsed":198,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"42027a03-a2b0-4ec8-e7dd-9fa0a42795fc","id":"gtnlon4010yW"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.0606\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(0 \\leq Z \\leq x)=0.4783$"],"metadata":{"id":"6c0s-fIW2HaV"}},{"cell_type":"code","source":["print(f\"x={norm.ppf(0.4783+0.5, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g60qWzmUe3fT","executionInfo":{"status":"ok","timestamp":1702008362913,"user_tz":360,"elapsed":226,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"40e7c2f7-5044-4781-9353-054fbd7572f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=2.0198\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wQMZkKYIf2yb","executionInfo":{"status":"ok","timestamp":1702008362914,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3de7734c-44ce-4f60-c566-0f66f0b1eaec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["# Resolvamos haciendo la integral hasta x e igualando al valor de la probabilidad.\n","x_value = solve(integrate(f_X, (x, 0,x))-0.4783,x)\n","print(f\"x value={x_value[0]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008363343,"user_tz":360,"elapsed":438,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"fec631cd-9e71-4aef-a06f-8318aa6ee065","id":"Efjff7B22PNi"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x value=2.0198\n"]}]},{"cell_type":"code","source":["# Comprobemos\n","P = N(integrate(f_X, (x,0,x_value[0])),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008363734,"user_tz":360,"elapsed":397,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"599277ed-1664-43db-e50d-50d83d740f21","id":"vFkxCnQd2PNi"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.4783\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(-1.5 \\leq Z \\leq x)=0.2313$"],"metadata":{"id":"2AqGvJ5-2d9O"}},{"cell_type":"code","source":["x = norm.cdf(-1.5, 0,1)\n","print(f\"x={norm.ppf(0.2313+x, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qz2S3g-mgDFP","executionInfo":{"status":"ok","timestamp":1702008363735,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7b5db228-bed1-4743-81c7-b61afb457446"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=-0.5299\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","import scipy.stats as st\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iWOpSl-tf4wK","executionInfo":{"status":"ok","timestamp":1702008363735,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"082a0e2a-113c-44dc-acd2-08bd7f80d593"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["# Resolvamos haciendo la integral hasta x e igualando al valor de la probabilidad.\n","x_value = solve(integrate(f_X, (x, -1.5,x))-0.2312,x)\n","print(f\"x value={x_value[0]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008364256,"user_tz":360,"elapsed":528,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d70d85ca-0381-40c5-f7b0-7ab4b901965b","id":"8umJJ-VL2d9P"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x value=-0.5301\n"]}]},{"cell_type":"code","source":["# Comprobemos\n","P = N(integrate(f_X, (x,-1.5,x_value[0])),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008364431,"user_tz":360,"elapsed":179,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7324e4e9-4aa8-48ac-e73d-e4eaa2f9c484","id":"uszD9Rgy2d9P"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.2312\n"]}]},{"cell_type":"markdown","source":["## $\\mathbb{P}(-x \\leq Z \\leq x)=0.5467$"],"metadata":{"id":"1jtpNu4T2rwN"}},{"cell_type":"code","source":["print(f\"x={norm.ppf(0.5467/2+0.5, 0,1):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9wu7LIhqgdqN","executionInfo":{"status":"ok","timestamp":1702008364660,"user_tz":360,"elapsed":233,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c2095673-5838-4a7d-db06-dbc703df55b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=0.7499\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008364661,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"e2c55df4-8921-4304-d008-f39bd20ec2c9","id":"mPrZANJa2rwO"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["# Resolvamos haciendo la integral hasta x e igualando al valor de la probabilidad.\n","x_value = solve(integrate(f_X, (x, -x,x))-0.5467,x)\n","print(f\"x value={x_value[0]:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008364910,"user_tz":360,"elapsed":257,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c771e67c-e799-4955-f8de-51d1e0cee4e6","id":"yd92qlMU2rwO"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x value=0.7499\n"]}]},{"cell_type":"code","source":["# Comprobemos\n","P = N(integrate(f_X, (x,-x_value[0],x_value[0])),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008365264,"user_tz":360,"elapsed":358,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"23adcc6d-33b3-4a70-a637-d3588d6549b4","id":"vCBSfkSQ2rwO"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.5467\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 14\n"],"metadata":{"id":"yqdcxyr023hy"}},{"cell_type":"markdown","source":["El análisis de los viajes diarios muestra que el número de pasajeros por automóvil, X, es una variable aleatoria discreta con distribuciones idénticas e independientes, tal que $\\mathbb{E}[X] = 1.2$ y $\\mathbb{Var}[X] = 1$. Usa el TCL para estimar la probabilidad de que, en una muestra de 100 automóviles, el número total de pasajeros sea 140 o menos."],"metadata":{"id":"nqK1mrRWNXPR"}},{"cell_type":"markdown","source":["Recordando el teorema central del límite:\n","\\begin{align}\n","Z &= \\lim_{n \\to \\infty} \\left( \\frac{\\bar{X}_n - \\mathbb{E}[S_n]} {\\sqrt{\\mathbb{Var}[S_n]}} \\right)\n","\\\\\n","Z &= \\lim_{n \\to \\infty} \\left( \\frac{S_n - n \\mu} {\\sqrt{n \\sigma^2}} \\right)\n","\\end{align}\n","\n","Dado que $\\mathbb{E}[X] = \\mu = 1.2$ y $\\mathbb{Var}[X] = 1$. Podemos estandarizar la distribución de la siguiente manera.\n","\n","\\begin{equation}\n","\\mathbb{P}\\left(  S_n \\leq 140  \\right)\n","\\\\\n","\\mathbb{P}\\left(  \\frac{S_n - 100(1.2)}{\\sqrt{100(1)^2}} \\leq \\frac{140 - 100(1.2)}{\\sqrt{100(1)^2}}  \\right)\n","\\\\\n","\\mathbb{P}\\left(  Z \\leq 2 \\right)\n","\\end{equation}"],"metadata":{"id":"cvaCXnAZ3xCl"}},{"cell_type":"code","source":["from scipy.stats import norm\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"IA6KNlyuw04n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"P={norm.cdf(2):.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ebn_HOkJw3WU","executionInfo":{"status":"ok","timestamp":1702008365264,"user_tz":360,"elapsed":10,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"c994ddc3-804b-4bdb-ebb9-91ffc43d6b28"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.9772\n"]}]},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l4eXcJZI9Nxo","executionInfo":{"status":"ok","timestamp":1702008365264,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"44e6da11-4019-46bd-e1b9-bb8a12f04e62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["P = N(integrate(f_X, (x, -oo,2)),4)\n","print(f\"P={P:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dMT-Ha8l9cnj","executionInfo":{"status":"ok","timestamp":1702008367328,"user_tz":360,"elapsed":2071,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a3897b3b-34e9-4e94-e597-5df82c1c95f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P=0.9772\n"]}]},{"cell_type":"markdown","source":["# Ejercicio 15\n"],"metadata":{"id":"SjC5MtO7-N7y"}},{"cell_type":"markdown","source":["Durante el transcurso de una sola temporada, un determinado jugador de fútbol realiza 213 intentos de penalti y anota 175 de ellos. Teniendo en cuenta esta información, calcule la probabilidad de que marque durante su próximo intento de penalti y explique las suposiciones que ha hecho en su cálculo. Proporcione un error apropiado para un nivel de confianza del 95% en su estimación numérica."],"metadata":{"id":"N-_IeSjKNZj-"}},{"cell_type":"code","source":["from scipy.stats import norm\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"FLM72GixxWVd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Definamos las variables\n","x = 175\n","n = 213"],"metadata":{"id":"AiQ2c6ojx-lk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# La probabilidad por TLC se define como x/n\n","p = x/n\n","print(f\"p={p:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008367328,"user_tz":360,"elapsed":17,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a5b6b917-4188-4c43-878e-a3e08e423e58","id":"L2-b4R-cyA0M"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["p=0.8216\n"]}]},{"cell_type":"code","source":["s = ((p*(1-p))/n)**(1/2)\n","print(f\"s={s:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9DqCfwhbyS5t","executionInfo":{"status":"ok","timestamp":1702008367328,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"555606be-a477-4396-dd6f-7c28465ca691"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["s=0.0262\n"]}]},{"cell_type":"code","source":["Z = norm.ppf(0.95/2+0.5, 0,1)\n","# Calculemos ahora los intevalos de confianza\n","lower_bound = p-Z*s\n","upper_bound = p+Z*s\n","\n","lower_bound, upper_bound"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m1W4O3_vxYpd","executionInfo":{"status":"ok","timestamp":1702008367329,"user_tz":360,"elapsed":16,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2c2630d6-4e2b-43b4-9bb1-a9a0a242ed80"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.770181283391897, 0.8730112048710138)"]},"metadata":{},"execution_count":146}]},{"cell_type":"markdown","source":["## Using sympy"],"metadata":{"id":"3MQ8yQhiyKFH"}},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","\n","x, mu, s = symbols('x mu s')\n","f_X = exp(-(x-mu)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(mu, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008367329,"user_tz":360,"elapsed":15,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"8d61148c-f7ad-4ffe-d892-c114228a4b90","id":"2kIiQenAGo4p"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["Z_value = solve(integrate(f_X, (x, -x, x))-0.95)[0]\n","Z_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008367541,"user_tz":360,"elapsed":226,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"ed5de97e-ba6a-4714-ddb7-1e7cfb573128","id":"OvvdaIvxGo4p"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.95996398454005"],"text/latex":"$\\displaystyle 1.95996398454005$"},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":["from sympy import *\n","# Definamos las variables\n","x = 175\n","n = 213"],"metadata":{"id":"Jcii5SDGE3sH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# La probabilidad por TLC se define como x/n\n","p = N(x/n,4)\n","p"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702008367542,"user_tz":360,"elapsed":13,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"87382aad-73bd-4857-848e-2072cfc3b8c0","id":"KLmyyPlxE3sI"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8216"],"text/latex":"$\\displaystyle 0.8216$"},"metadata":{},"execution_count":150}]},{"cell_type":"code","source":["s = N(sqrt((p*(1-p))/n),4)\n","s"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EOx0NsVnFIq2","executionInfo":{"status":"ok","timestamp":1702008367542,"user_tz":360,"elapsed":12,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"bd9d102c-4364-48f2-cc2e-9dba89fa2a11"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.02623"],"text/latex":"$\\displaystyle 0.02623$"},"metadata":{},"execution_count":151}]},{"cell_type":"code","source":["# Calculemos ahora los intevalos de confianza\n","lower_bound = N(p-Z_value*s,4)\n","upper_bound = N(p+Z_value*s,4)\n","\n","lower_bound, upper_bound"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xAzXbsi_GQwb","executionInfo":{"status":"ok","timestamp":1702008367542,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7ad4d145-7ab4-48f9-c524-445d3f8b1f01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.7702, 0.8730)"]},"metadata":{},"execution_count":152}]},{"cell_type":"markdown","source":["# Ejercicio 16\n"],"metadata":{"id":"sOxjqghxHpy4"}},{"cell_type":"markdown","source":["Sean $X_1,X_2,\\ldots,X_n$ variables aleatorias independientes e idénticamente distribuídas con distribución exponencial con parámetro $\\lambda=1$. Sea\n","\n","\\begin{equation}\n","\\bar{X} = \\frac{1}{n}(X_1+X_2+\\ldots+X_n).\n","\\end{equation}\n","\n","¿Qué tan grande debe ser $n$ para que\n","\\begin{equation}\n","\\mathbb{P}(0.9 \\leq \\bar{X} \\leq 1.1) \\ge 0.95?\n","\\end{equation}"],"metadata":{"id":"PP16y9J_Nbt_"}},{"cell_type":"code","source":["from sympy import *\n","from sympy.plotting import plot\n","\n","x, L, m, s = symbols('x L m s')\n","n = symbols('n', naturals=True)\n","f_X = L*exp(-L*x)\n","# Dado que L = 1\n","L_value = 1\n","f_X = f_X.subs(L,L_value)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_JF22vy4Hlr2","executionInfo":{"status":"ok","timestamp":1702008367688,"user_tz":360,"elapsed":156,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"3843f96d-019a-4103-cff2-ab07a4397b37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["exp(-x)"],"text/latex":"$\\displaystyle e^{- x}$"},"metadata":{},"execution_count":153}]},{"cell_type":"markdown","source":["\\begin{equation}\n","n \\geq \\frac{z^2 \\cdot \\sigma^2}{E^2}\n","\\end{equation}\n"],"metadata":{"id":"pKETcXX3I9ch"}},{"cell_type":"code","source":["f_X = exp(-(x-m)**2/(2*s**2))/(s*sqrt(2*pi))\n","# Dado que es una normal estándar mu = 0 y s = 1\n","f_X = f_X.subs(m, 0).subs(s, 1)\n","f_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fqNKB5caKkNX","executionInfo":{"status":"ok","timestamp":1702008367688,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d571bc65-d9cd-447b-b4d2-ef28a7ab1d6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(2)*exp(-x**2/2)/(2*sqrt(pi))"],"text/latex":"$\\displaystyle \\frac{\\sqrt{2} e^{- \\frac{x^{2}}{2}}}{2 \\sqrt{\\pi}}$"},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["Z_value = solve(integrate(f_X, (x, -x, x))-0.95)[0]\n","print(f\"Z value={Z_value:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lYvjtrepd6F6","executionInfo":{"status":"ok","timestamp":1702008367885,"user_tz":360,"elapsed":207,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"a2f298db-b183-4cdc-fd54-c767e0b9aa50"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Z value=1.9600\n"]}]},{"cell_type":"code","source":["mu = n / L_value\n","s = sqrt(n/L_value**2)\n","\n","mu, s"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1vwCWUfDIxXx","executionInfo":{"status":"ok","timestamp":1702008367886,"user_tz":360,"elapsed":25,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0ff7666d-9a2e-4b10-9c91-d07cac2d9aa9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(n, sqrt(n))"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["error = Z_value*s\n","error"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VTBIkuAMN6f0","executionInfo":{"status":"ok","timestamp":1702008367886,"user_tz":360,"elapsed":22,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7b6c64d6-909c-45da-a323-03b5ff800419"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.95996398454005*sqrt(n)"],"text/latex":"$\\displaystyle 1.95996398454005 \\sqrt{n}$"},"metadata":{},"execution_count":157}]},{"cell_type":"code","source":["cota_inf = mu - error\n","cota_sup = mu + error\n","\n","cota_inf, cota_sup"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PmJ0OT2_OtVK","executionInfo":{"status":"ok","timestamp":1702008367886,"user_tz":360,"elapsed":20,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b1960241-0ac7-428b-de87-e3b91ce19908"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-1.95996398454005*sqrt(n) + n, 1.95996398454005*sqrt(n) + n)"]},"metadata":{},"execution_count":158}]},{"cell_type":"code","source":["n_value = solveset(Z_value**2*s**2/error**2 <= n, n)\n","n_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Vgq8lZAe8Dh","executionInfo":{"status":"ok","timestamp":1702008367886,"user_tz":360,"elapsed":18,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"5fa33189-5a83-4ef8-f267-37cbc2487387"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ConditionSet(n, 1.0 <= n, Complexes)"],"text/latex":"$\\displaystyle \\left\\{n\\; \\middle|\\; n \\in \\mathbb{C} \\wedge 1.0 \\leq n \\right\\}$"},"metadata":{},"execution_count":159}]},{"cell_type":"markdown","source":["# Ejercicio 17\n"],"metadata":{"id":"6V0YwQIbRK2H"}},{"cell_type":"markdown","source":["Considere la siguiente función bivariada:\n","\n","\\begin{array}{ c c c }\n","f(x,y) = \\frac{xy}{18} & x=1,2; & y=1,2,3\n","\\end{array}"],"metadata":{"id":"RUgvDNeDNd8K"}},{"cell_type":"markdown","source":["Verifiquemos que la suma sobre los valores de $x$ y $y$ es 1."],"metadata":{"id":"oOKzQTtaSzru"}},{"cell_type":"code","source":["X = [*range(1,3)]\n","Y = [*range(1,4) ]\n","x,y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jsIEzmv-RWYV","executionInfo":{"status":"ok","timestamp":1702008367886,"user_tz":360,"elapsed":14,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"edc731ab-92a5-4c46-c2c4-ccc068cf552c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(x, 'T')"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["x, y = symbols('x y')\n","f_XY = x*y/18"],"metadata":{"id":"1B0c1d50S8-V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["P_XY = Sum(Sum(f_XY, (x, min(X), max(X))),(y, min(Y), max(Y))).doit()\n","print(f\"Suma de probabilidades marginales es {P_XY:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k9Lj83dpTQp-","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":232,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"78c9e73d-e783-4446-c023-7acbeb834244"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Suma de probabilidades marginales es 1.0000\n"]}]},{"cell_type":"markdown","source":["Calculemos $\\mathbb{P}[X=x]$ y $\\mathbb{P}[Y=y]$"],"metadata":{"id":"Xunsdx-nT9B6"}},{"cell_type":"code","source":["P_X = Sum(f_XY, (y, min(Y), max(Y))).doit()\n","print(f\"P[X]={P_X}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ow6NzHXdTybz","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":11,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"d841f757-bae3-4a56-a657-7aa9d0d5a67d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P[X]=x/3\n"]}]},{"cell_type":"code","source":["P_Y = Sum(f_XY, (x, min(X), max(X))).doit()\n","print(f\"P[Y]={P_Y}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JTCOJkkgUDLQ","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":9,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"28886da3-199d-49e2-83dd-d408bdaf039b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P[Y]=y/6\n"]}]},{"cell_type":"markdown","source":["Verifiquemos que $X$ y $Y$ son independientes."],"metadata":{"id":"eeY7actLULu5"}},{"cell_type":"code","source":["P_XY == P_X * P_Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLOSJZO6UJYs","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"b324b474-1990-4d7a-eda4-2a1607912c1b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":165}]},{"cell_type":"markdown","source":["Calculemos $\\mathbb{P}(X+Y \\le 3)$"],"metadata":{"id":"uc3swa1IUwkC"}},{"cell_type":"code","source":["P_X_plus_Y = 0\n","for xl in X:\n","  for yl in Y:\n","    if xl + yl <= 3:\n","        P_X_plus_Y += f_XY.subs(x,xl).subs(y,yl)\n","print(f\"Probabilidad dado los valores X+Y son menores o iguales a 3 es de {P_X_plus_Y}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ND69s-o3Uut4","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"2c6b8784-ca68-47f7-e373-06dc96f420b2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad dado los valores X+Y son menores o iguales a 3 es de 5/18\n"]}]},{"cell_type":"markdown","source":["Calculemos $\\mathbb{P}(X|Y=1)$"],"metadata":{"id":"QM_pV18NaANx"}},{"cell_type":"code","source":["P_X_given_Y = f_XY.subs(x,list(set(X).intersection({1}))[0]).subs(y,1)/P_Y.subs(y,1)\n","print(f\"Probabilidad dado Y=1 es de {P_X_given_Y}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UBllCPUJZ6Nz","executionInfo":{"status":"ok","timestamp":1702008368106,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"7e4fb687-e55e-4878-cc84-bafad3f9853f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probabilidad dado Y=1 es de 1/3\n"]}]}]}