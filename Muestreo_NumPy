{"cells":[{"cell_type":"markdown","metadata":{"id":"OdNbs5K-gVGy"},"source":["# Muestreo aleatorio con Numpy"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"5ow-cHH0zCbK","executionInfo":{"status":"ok","timestamp":1707845769740,"user_tz":360,"elapsed":517,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import warnings\n","warnings.filterwarnings(\"ignore\")"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BEfRhsN0zRuq","outputId":"1f2b2932-5407-4ba3-afd6-bbc2377b3760","executionInfo":{"status":"ok","timestamp":1707845769741,"user_tz":360,"elapsed":8,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.44751975077590156"]},"metadata":{},"execution_count":2}],"source":["np.random.random() #numero al azar entre 0 y 1"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MMOtY3Z20Cs9","outputId":"63683b53-3134-4c49-c307-29cb4aa2425a","executionInfo":{"status":"ok","timestamp":1707845769742,"user_tz":360,"elapsed":7,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":3}],"source":["np.random.randint(2,7)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KllzN7fy1R6u","outputId":"92fcc592-7c9f-4c63-e5ba-4d559b2c04af","executionInfo":{"status":"ok","timestamp":1707845769742,"user_tz":360,"elapsed":6,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":4}],"source":["np.random.randint(10)"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"-sSzKC4P1Uvi","executionInfo":{"status":"ok","timestamp":1707845770309,"user_tz":360,"elapsed":572,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[],"source":["enteros_aleatorios = [ ]\n","\n","for i in range(1,11):\n","    rint = np.random.randint(1,20)\n","    enteros_aleatorios.append(rint)"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MWGCRKc41qyJ","outputId":"74f29546-9912-4ec6-980f-1045d54764d0","executionInfo":{"status":"ok","timestamp":1707845772736,"user_tz":360,"elapsed":5,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[15, 14, 10, 3, 8, 5, 10, 13, 3, 12]"]},"metadata":{},"execution_count":6}],"source":["enteros_aleatorios"]},{"cell_type":"code","source":["[*np.random.randint(1,20,10)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kQDKhg7qh_cB","executionInfo":{"status":"ok","timestamp":1707845774452,"user_tz":360,"elapsed":2,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"03378b0b-5be8-471f-90e2-e28ce37c6899"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 17, 3, 19, 15, 14, 4, 12, 8, 2]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qv64U2l64Lkz","outputId":"8261075c-49e0-4ff9-a2ca-5ee6e205e816","executionInfo":{"status":"ok","timestamp":1707845776832,"user_tz":360,"elapsed":648,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([15, 14, 10,  3,  8,  5, 10, 13,  3, 12])"]},"metadata":{},"execution_count":8}],"source":["enteros_aleatorios_arreglo = np.array(enteros_aleatorios)\n","enteros_aleatorios_arreglo"]},{"cell_type":"code","source":["np.random.randint(1,21,10)+np.random.randint(1,21,10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vt2hKIQLnZ9K","executionInfo":{"status":"ok","timestamp":1707847705109,"user_tz":360,"elapsed":5,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6230ae29-0073-4f30-ae9a-10f6f01bac06"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([19, 16, 29, 31,  8, 16, 12, 20, 30, 13])"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["m = [1,2,3,4]\n","n = [3,4,5,6]\n","[x+y for x,y in zip(m,n)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z0bVF9hSoH_n","executionInfo":{"status":"ok","timestamp":1707847705109,"user_tz":360,"elapsed":4,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"0e25c544-0bf7-47ae-ed6a-23c9c11669d1"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4, 6, 8, 10]"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","metadata":{"id":"zEFAydJagVG6"},"source":["### El método `.binomial()`"]},{"cell_type":"markdown","metadata":{"id":"V6ogeYhSgVG7"},"source":["Ensayo Bernoulli: Considere el lanzamiento de una moneda junto con los siguientes datos:\n","   - Espacio muestral: $\\Omega=\\{\\text{águila}, \\text{sol} \\}$.\n","   - Variable aleatoria: $X:\\Omega\\to \\{0,1\\}$.\n","   - Asignación de probabilidad: $\\mathbb{P}(X(\\text{sol})=1)=p\\in (0,1)$, $\\mathbb{P}(X(\\text{águila})=0)=1-p\\in (0,1)$."]},{"cell_type":"markdown","metadata":{"id":"rcRM6u3lgVG7"},"source":["Ahora, consideremos una sucesión de $n$ ensayos Bernoulli independientes $X_{1}, X_{2},\\dots, X_{n}$. Cada $X_{i}$ es una copia de $X$ en nuestro modelo anterior. Así, cada $X_{i}$ toma dos posibles valores, el $0$ o $1$, con probabilidad $1-p$ y $p$ respectivamente."]},{"cell_type":"code","source":["df = pd.DataFrame({'Pepe':np.random.randint(1,100,100), 'Juan':np.random.randint(1,100,100), 'Roberto':np.random.randint(1,100,100)})\n","df_mean = pd.DataFrame(df.mean(), columns = ['Medias'])\n","print(df_mean,'\\n\\n', df.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZKXUAlt6r3nx","executionInfo":{"status":"ok","timestamp":1707849068686,"user_tz":360,"elapsed":304,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"777ca141-fbc3-43a3-9c53-cb8ffcba96b0"},"execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["         Medias\n","Pepe      46.04\n","Juan      45.90\n","Roberto   50.30 \n","\n","              Pepe        Juan     Roberto\n","count  100.000000  100.000000  100.000000\n","mean    46.040000   45.900000   50.300000\n","std     28.315652   28.800077   30.880186\n","min      1.000000    2.000000    1.000000\n","25%     21.750000   20.750000   20.000000\n","50%     44.500000   39.000000   54.000000\n","75%     70.000000   68.250000   78.250000\n","max     99.000000   98.000000   99.000000\n"]}]},{"cell_type":"code","source":["df_binomial = pd.DataFrame({f'Muestra {x}': np.random.binomial(100, 0.5, 100) for x in range(1, 1001)})\n","df_binomial"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"SLg1ka2olTlL","executionInfo":{"status":"ok","timestamp":1707849151934,"user_tz":360,"elapsed":320,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"add89dfd-0aed-42b7-95c4-e5ccb1ec5407"},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Muestra 1  Muestra 2  Muestra 3  Muestra 4  Muestra 5  Muestra 6  \\\n","0          53         44         51         48         54         56   \n","1          49         51         50         58         54         56   \n","2          52         48         45         48         49         38   \n","3          49         50         57         51         47         50   \n","4          47         53         50         49         61         44   \n","..        ...        ...        ...        ...        ...        ...   \n","95         47         56         46         45         51         42   \n","96         52         60         50         60         51         54   \n","97         52         51         38         42         49         50   \n","98         52         52         45         38         50         46   \n","99         52         51         47         38         46         45   \n","\n","    Muestra 7  Muestra 8  Muestra 9  Muestra 10  ...  Muestra 991  \\\n","0          59         48         43          45  ...           54   \n","1          58         44         54          51  ...           52   \n","2          46         52         46          50  ...           51   \n","3          45         45         48          54  ...           50   \n","4          52         45         54          50  ...           44   \n","..        ...        ...        ...         ...  ...          ...   \n","95         43         47         43          52  ...           48   \n","96         53         53         51          54  ...           45   \n","97         52         49         54          56  ...           51   \n","98         48         47         59          55  ...           55   \n","99         43         41         58          46  ...           54   \n","\n","    Muestra 992  Muestra 993  Muestra 994  Muestra 995  Muestra 996  \\\n","0            52           53           52           49           44   \n","1            55           49           50           51           48   \n","2            53           53           46           59           46   \n","3            43           52           46           56           50   \n","4            54           55           57           48           47   \n","..          ...          ...          ...          ...          ...   \n","95           46           49           51           57           41   \n","96           55           44           54           56           50   \n","97           45           35           45           56           44   \n","98           47           50           45           50           58   \n","99           39           54           45           51           48   \n","\n","    Muestra 997  Muestra 998  Muestra 999  Muestra 1000  \n","0            42           49           38            55  \n","1            48           50           43            46  \n","2            48           50           54            47  \n","3            48           55           48            51  \n","4            46           57           52            51  \n","..          ...          ...          ...           ...  \n","95           49           48           50            54  \n","96           53           49           44            51  \n","97           54           49           61            46  \n","98           47           54           46            47  \n","99           48           46           48            55  \n","\n","[100 rows x 1000 columns]"],"text/html":["\n","  <div id=\"df-efd65295-7a1f-4b07-83c4-640bfe584663\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Muestra 1</th>\n","      <th>Muestra 2</th>\n","      <th>Muestra 3</th>\n","      <th>Muestra 4</th>\n","      <th>Muestra 5</th>\n","      <th>Muestra 6</th>\n","      <th>Muestra 7</th>\n","      <th>Muestra 8</th>\n","      <th>Muestra 9</th>\n","      <th>Muestra 10</th>\n","      <th>...</th>\n","      <th>Muestra 991</th>\n","      <th>Muestra 992</th>\n","      <th>Muestra 993</th>\n","      <th>Muestra 994</th>\n","      <th>Muestra 995</th>\n","      <th>Muestra 996</th>\n","      <th>Muestra 997</th>\n","      <th>Muestra 998</th>\n","      <th>Muestra 999</th>\n","      <th>Muestra 1000</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>53</td>\n","      <td>44</td>\n","      <td>51</td>\n","      <td>48</td>\n","      <td>54</td>\n","      <td>56</td>\n","      <td>59</td>\n","      <td>48</td>\n","      <td>43</td>\n","      <td>45</td>\n","      <td>...</td>\n","      <td>54</td>\n","      <td>52</td>\n","      <td>53</td>\n","      <td>52</td>\n","      <td>49</td>\n","      <td>44</td>\n","      <td>42</td>\n","      <td>49</td>\n","      <td>38</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>51</td>\n","      <td>50</td>\n","      <td>58</td>\n","      <td>54</td>\n","      <td>56</td>\n","      <td>58</td>\n","      <td>44</td>\n","      <td>54</td>\n","      <td>51</td>\n","      <td>...</td>\n","      <td>52</td>\n","      <td>55</td>\n","      <td>49</td>\n","      <td>50</td>\n","      <td>51</td>\n","      <td>48</td>\n","      <td>48</td>\n","      <td>50</td>\n","      <td>43</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>52</td>\n","      <td>48</td>\n","      <td>45</td>\n","      <td>48</td>\n","      <td>49</td>\n","      <td>38</td>\n","      <td>46</td>\n","      <td>52</td>\n","      <td>46</td>\n","      <td>50</td>\n","      <td>...</td>\n","      <td>51</td>\n","      <td>53</td>\n","      <td>53</td>\n","      <td>46</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>48</td>\n","      <td>50</td>\n","      <td>54</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>49</td>\n","      <td>50</td>\n","      <td>57</td>\n","      <td>51</td>\n","      <td>47</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>48</td>\n","      <td>54</td>\n","      <td>...</td>\n","      <td>50</td>\n","      <td>43</td>\n","      <td>52</td>\n","      <td>46</td>\n","      <td>56</td>\n","      <td>50</td>\n","      <td>48</td>\n","      <td>55</td>\n","      <td>48</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>47</td>\n","      <td>53</td>\n","      <td>50</td>\n","      <td>49</td>\n","      <td>61</td>\n","      <td>44</td>\n","      <td>52</td>\n","      <td>45</td>\n","      <td>54</td>\n","      <td>50</td>\n","      <td>...</td>\n","      <td>44</td>\n","      <td>54</td>\n","      <td>55</td>\n","      <td>57</td>\n","      <td>48</td>\n","      <td>47</td>\n","      <td>46</td>\n","      <td>57</td>\n","      <td>52</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>47</td>\n","      <td>56</td>\n","      <td>46</td>\n","      <td>45</td>\n","      <td>51</td>\n","      <td>42</td>\n","      <td>43</td>\n","      <td>47</td>\n","      <td>43</td>\n","      <td>52</td>\n","      <td>...</td>\n","      <td>48</td>\n","      <td>46</td>\n","      <td>49</td>\n","      <td>51</td>\n","      <td>57</td>\n","      <td>41</td>\n","      <td>49</td>\n","      <td>48</td>\n","      <td>50</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>52</td>\n","      <td>60</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>51</td>\n","      <td>54</td>\n","      <td>53</td>\n","      <td>53</td>\n","      <td>51</td>\n","      <td>54</td>\n","      <td>...</td>\n","      <td>45</td>\n","      <td>55</td>\n","      <td>44</td>\n","      <td>54</td>\n","      <td>56</td>\n","      <td>50</td>\n","      <td>53</td>\n","      <td>49</td>\n","      <td>44</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>52</td>\n","      <td>51</td>\n","      <td>38</td>\n","      <td>42</td>\n","      <td>49</td>\n","      <td>50</td>\n","      <td>52</td>\n","      <td>49</td>\n","      <td>54</td>\n","      <td>56</td>\n","      <td>...</td>\n","      <td>51</td>\n","      <td>45</td>\n","      <td>35</td>\n","      <td>45</td>\n","      <td>56</td>\n","      <td>44</td>\n","      <td>54</td>\n","      <td>49</td>\n","      <td>61</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>52</td>\n","      <td>52</td>\n","      <td>45</td>\n","      <td>38</td>\n","      <td>50</td>\n","      <td>46</td>\n","      <td>48</td>\n","      <td>47</td>\n","      <td>59</td>\n","      <td>55</td>\n","      <td>...</td>\n","      <td>55</td>\n","      <td>47</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>58</td>\n","      <td>47</td>\n","      <td>54</td>\n","      <td>46</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>52</td>\n","      <td>51</td>\n","      <td>47</td>\n","      <td>38</td>\n","      <td>46</td>\n","      <td>45</td>\n","      <td>43</td>\n","      <td>41</td>\n","      <td>58</td>\n","      <td>46</td>\n","      <td>...</td>\n","      <td>54</td>\n","      <td>39</td>\n","      <td>54</td>\n","      <td>45</td>\n","      <td>51</td>\n","      <td>48</td>\n","      <td>48</td>\n","      <td>46</td>\n","      <td>48</td>\n","      <td>55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 1000 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efd65295-7a1f-4b07-83c4-640bfe584663')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efd65295-7a1f-4b07-83c4-640bfe584663 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efd65295-7a1f-4b07-83c4-640bfe584663');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0149e8ea-fc26-4b8b-8e75-4d106bce8233\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0149e8ea-fc26-4b8b-8e75-4d106bce8233')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0149e8ea-fc26-4b8b-8e75-4d106bce8233 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["print(df_binomial.mean(),'\\n\\n', df_binomial.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rvUD3SiXur9G","executionInfo":{"status":"ok","timestamp":1707849155692,"user_tz":360,"elapsed":3007,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"6a03e73f-804f-4d35-868c-58921d271c34"},"execution_count":146,"outputs":[{"output_type":"stream","name":"stdout","text":["Muestra 1       50.38\n","Muestra 2       50.77\n","Muestra 3       50.34\n","Muestra 4       49.73\n","Muestra 5       49.93\n","                ...  \n","Muestra 996     48.56\n","Muestra 997     49.62\n","Muestra 998     50.15\n","Muestra 999     49.75\n","Muestra 1000    50.13\n","Length: 1000, dtype: float64 \n","\n","         Muestra 1   Muestra 2   Muestra 3   Muestra 4  Muestra 5   Muestra 6  \\\n","count  100.000000  100.000000  100.000000  100.000000  100.00000  100.000000   \n","mean    50.380000   50.770000   50.340000   49.730000   49.93000   49.350000   \n","std      4.945726    4.896618    5.650101    4.964226    5.19762    5.027952   \n","min     36.000000   40.000000   38.000000   38.000000   38.00000   38.000000   \n","25%     47.000000   48.000000   46.000000   47.000000   46.00000   46.000000   \n","50%     51.000000   51.000000   50.000000   50.000000   49.00000   49.000000   \n","75%     54.000000   53.000000   55.000000   53.000000   54.00000   53.000000   \n","max     60.000000   64.000000   65.000000   63.000000   62.00000   60.000000   \n","\n","        Muestra 7  Muestra 8   Muestra 9  Muestra 10  ...  Muestra 991  \\\n","count  100.000000  100.00000  100.000000  100.000000  ...   100.000000   \n","mean    49.500000   49.62000   50.790000   50.750000  ...    49.540000   \n","std      4.685029    5.50625    5.299695    5.246211  ...     4.562517   \n","min     39.000000   33.00000   34.000000   39.000000  ...    39.000000   \n","25%     46.000000   46.00000   46.750000   47.000000  ...    46.000000   \n","50%     49.000000   50.00000   51.000000   50.000000  ...    49.500000   \n","75%     52.250000   53.25000   55.000000   54.000000  ...    53.000000   \n","max     61.000000   68.00000   64.000000   65.000000  ...    58.000000   \n","\n","       Muestra 992  Muestra 993  Muestra 994  Muestra 995  Muestra 996  \\\n","count   100.000000   100.000000   100.000000   100.000000   100.000000   \n","mean     51.170000    49.730000    50.160000    50.460000    48.560000   \n","std       5.316365     5.736389     4.819405     4.987702     5.347179   \n","min      39.000000    35.000000    39.000000    40.000000    36.000000   \n","25%      46.750000    45.750000    46.000000    48.000000    45.000000   \n","50%      52.000000    50.000000    50.000000    50.000000    49.000000   \n","75%      55.000000    53.250000    53.250000    54.000000    52.000000   \n","max      65.000000    62.000000    64.000000    62.000000    64.000000   \n","\n","       Muestra 997  Muestra 998  Muestra 999  Muestra 1000  \n","count   100.000000   100.000000   100.000000    100.000000  \n","mean     49.620000    50.150000    49.750000     50.130000  \n","std       4.709286     4.571265     4.934674      4.620234  \n","min      40.000000    40.000000    38.000000     39.000000  \n","25%      47.000000    47.000000    46.000000     47.000000  \n","50%      49.000000    50.000000    50.000000     50.000000  \n","75%      53.000000    53.000000    53.000000     52.250000  \n","max      64.000000    62.000000    61.000000     60.000000  \n","\n","[8 rows x 1000 columns]\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(df_binomial.mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"ciKfZSmKsTr3","executionInfo":{"status":"ok","timestamp":1707849157249,"user_tz":360,"elapsed":648,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"88bc070b-2886-4440-e4f0-47502f9f5846"},"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Density'>"]},"metadata":{},"execution_count":147},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":88,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"s7IbmbsG-EYS","outputId":"55211746-46cc-4545-8799-f1d65fe5e9d5","executionInfo":{"status":"ok","timestamp":1707848273961,"user_tz":360,"elapsed":318,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   muestra 1  muestra 2  muestra 3  muestra 4  muestra 5  muestra 6  \\\n","0          1          0          0          0          1          1   \n","1          1          1          0          0          1          1   \n","2          0          0          1          1          0          0   \n","3          1          1          1          1          1          0   \n","4          0          1          1          1          1          1   \n","\n","   muestra 7  muestra 8  muestra 9  muestra 10  \n","0          1          1          1           0  \n","1          1          1          0           0  \n","2          0          0          1           0  \n","3          0          1          1           1  \n","4          1          1          1           0  "],"text/html":["\n","  <div id=\"df-4493220b-c9ab-42ce-8e34-99134329f338\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>muestra 1</th>\n","      <th>muestra 2</th>\n","      <th>muestra 3</th>\n","      <th>muestra 4</th>\n","      <th>muestra 5</th>\n","      <th>muestra 6</th>\n","      <th>muestra 7</th>\n","      <th>muestra 8</th>\n","      <th>muestra 9</th>\n","      <th>muestra 10</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4493220b-c9ab-42ce-8e34-99134329f338')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4493220b-c9ab-42ce-8e34-99134329f338 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4493220b-c9ab-42ce-8e34-99134329f338');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb3ee5b6-109a-4c7d-9ee9-49d2cd919684\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb3ee5b6-109a-4c7d-9ee9-49d2cd919684')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb3ee5b6-109a-4c7d-9ee9-49d2cd919684 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":88}],"source":["#Vamos a crear una matriz cuyod elementos registren el resultados de volados\n","#aguila = 0 y sol = 1\n","\n","df50 = pd.DataFrame()\n","\n","for i in range (1,11): #se lanza 10 veces, el número de muestras\n","    volados_muestra = np.random.binomial(1, 0.5, 5) #lanzamiento de 1 moneda, que sea justa y aventamos 5 veces\n","    col = f\"muestra {i}\"\n","    df50[col]=volados_muestra\n","\n","df50"]},{"cell_type":"code","execution_count":89,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"gS6hU4eSjQzQ","outputId":"e20af582-86f9-4753-f969-53a3ca337ed7","executionInfo":{"status":"ok","timestamp":1707848278101,"user_tz":360,"elapsed":290,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            muestra de medias\n","muestra 1                 0.6\n","muestra 2                 0.6\n","muestra 3                 0.6\n","muestra 4                 0.6\n","muestra 5                 0.8\n","muestra 6                 0.6\n","muestra 7                 0.6\n","muestra 8                 0.8\n","muestra 9                 0.8\n","muestra 10                0.2"],"text/html":["\n","  <div id=\"df-dba7e55e-5f0e-46b1-b4af-ce0895522f7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>muestra de medias</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>muestra 1</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 2</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 3</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 4</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 5</th>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 6</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 7</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 8</th>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 9</th>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>muestra 10</th>\n","      <td>0.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dba7e55e-5f0e-46b1-b4af-ce0895522f7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dba7e55e-5f0e-46b1-b4af-ce0895522f7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dba7e55e-5f0e-46b1-b4af-ce0895522f7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1fdb59f3-e48e-4787-be4e-4b6149f0d364\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1fdb59f3-e48e-4787-be4e-4b6149f0d364')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1fdb59f3-e48e-4787-be4e-4b6149f0d364 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":89}],"source":["df50_medias = pd.DataFrame(df50.mean(), columns = [\"muestra de medias\"])\n","df50_medias"]},{"cell_type":"code","execution_count":90,"metadata":{"id":"0yPJS50FnjND","colab":{"base_uri":"https://localhost:8080/","height":447},"executionInfo":{"status":"ok","timestamp":1707848280612,"user_tz":360,"elapsed":1234,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}},"outputId":"41cd405d-3906-41ce-8991-c884e9b813ba"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Density'>"]},"metadata":{},"execution_count":90},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import seaborn as sns\n","sns.distplot(df50_medias)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l3tEIIzqnqFf"},"outputs":[],"source":["df502 = pd.DataFrame()\n","\n","for i in range (1,11): #se lanza 10 veces, el número de muestras\n","    volados_muestra = np.random.binomial(50, 0.5, 5) #lanzamiento de 50 moneda, que sea justa y aventamos 5 veces\n","    col = f\"muestra {i}\"\n","    df502[col]=volados_muestra\n","\n","df502"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dqIxZ-k6n1vY"},"outputs":[],"source":["df502_medias = pd.DataFrame(df502.mean(), columns = [\"muestra de medias\"])\n","df502_medias"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cVKmc82Wn9B3"},"outputs":[],"source":["import seaborn as sns\n","sns.distplot(df502_medias)"]},{"cell_type":"markdown","metadata":{"id":"2expJw8cgVG8"},"source":["![Galton](https://j.gifs.com/vnpDlj.gif)"]},{"cell_type":"markdown","metadata":{"id":"By-77BgngVG8"},"source":["### Applet\n","\n","Math is fun!\n","\n","https://www.mathsisfun.com/data/quincunx.html"]},{"cell_type":"markdown","metadata":{"id":"ytha7cslgVG8"},"source":["## Universalidad"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AI35JTRRgVG8","outputId":"2fd3944d-72cf-4e78-a53f-72871f32110c","colab":{"base_uri":"https://localhost:8080/","height":321},"executionInfo":{"status":"ok","timestamp":1707244054148,"user_tz":360,"elapsed":321,"user":{"displayName":"Juan Alvaro Diaz Raimond Kedilhac","userId":"00758513785707623786"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.lib.display.YouTubeVideo at 0x7cfc9d52bdc0>"],"text/html":["\n","        <iframe\n","            width=\"400\"\n","            height=\"300\"\n","            src=\"https://www.youtube.com/embed/-HrtJ3SRQF4E\"\n","            frameborder=\"0\"\n","            allowfullscreen\n","            \n","        ></iframe>\n","        "]},"metadata":{},"execution_count":117}],"source":["from IPython.display import YouTubeVideo\n","YouTubeVideo('-HrtJ3SRQF4E')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AG5b2AVXgVG8"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1hVQ7HmrYtFG0Pg3keSpWtFNlrVOPQ-wV","timestamp":1707241201475}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.6"}},"nbformat":4,"nbformat_minor":0}